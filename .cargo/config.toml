# This project should have minimal config here. Rely on Arcboot
[unstable]
# just use arc
# build-std = ["core", "compiler_builtins", "alloc"]
# build-std-features = ["compiler-builtins-mem"]
unstable-options = true

[alias]
# BUILD
# Pass --release or --debug. Default is --debug with limine
# Defaults
barm = "build --target aarch64-unknown-none"
# Arcboot
barma = "build --target aarch64-unknown-none --features arcboot"
# Limine
barml = "build --target aarch64-unknown-none --features limine"
brvl = "build --target riscv64gc-unknown-none-elf --features limine"
bx86l = "build --target x86_64-unknown-none --features limine"
# BUILD TESTS (NO RUN)
trv = "test --target riscv64gc-unknown-none-elf --no-run"
tarm = "test --target aarch64-unknown-none --no-run"
tx86 = "test --target x86_64-unknown-none --no-run"
# BUILD ARCTEST (NO RUN)
# Run with arc test --neutron after cargo arctestb
arctestb = "rustc --target=riscv64gc-unknown-none-elf --features arctest"

# -----------------
# GENERIC OPTIONS
# -----------------

# SEEMS LIKE rustflags is mutually exclusive
[build]
out-dir = "build"
runner = "arc run --neutron"
# ! for now. Might just have to use arc build to specify the RUSTFLAGS on cli
# and just keep out-dir and runner
# rustflags = [
#     "-Clink-arg=-T.neutron/aarch64/arcboot.ld",
#     "-Cforce-frame-pointers=yes",
# ]

# [target.features.arcboot]

# [target.features.multiboot]

# [target.aarch64-unknown-none]

# [target.riscv64gc-unknown-none-elf]

# [target.x86_64-unknown-none]

# -----------------
# AARCH64
# -----------------

# x86 AND LIMINE
[target.'cfg(all(target_arch = "x86_64-unknown-none", feature = "limine"))']
# cargo searches for the first matching rustflags and uses that
# here = https://doc.rust-lang.org/cargo/reference/config.html#buildrustflags
rustflags = [
    "-Clink-arg=-T.neutron/aarch64/stivale2.ld",
    "-Cforce-frame-pointers=yes",
]

# -----------------
# RISCV
# -----------------

# -----------------
# x86_64
# -----------------
