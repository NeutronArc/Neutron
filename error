   Compiling scopeguard v1.1.0
   Compiling az v1.2.0
   Compiling num-traits v0.2.14
   Compiling byteorder v1.4.3
   Compiling tock-registers v0.7.0
   Compiling spin v0.5.2
   Compiling micromath v1.1.1
error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsize`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_peq`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_teq`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `copy`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `clone`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sync`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_kind`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_type`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pointee_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `metadata_type`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dyn_metadata`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `freeze`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `destruct`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `coerce_unsized`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dispatch_from_dyn`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `neg`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `not`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsafe_cell`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `va_list`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_target`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `receiver`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once_output`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `future_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_state`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_return`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unpin`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pin`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `eq`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `partial_ord`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_display`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_bounds_check`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_info`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_location`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_no_unwind`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop_in_place`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `alloc_layout`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select_ct`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `phantom_data`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `manually_drop`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `maybe_uninit`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `align_offset`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Try`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `slice_len_fn`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_residual`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_output`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `branch`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ready`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Pending`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_generator`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `get_context`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `poll`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Some`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `None`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ok`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Err`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Continue`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Break`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_future`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_iter`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `next`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `new_unchecked`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFrom`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFull`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `range_inclusive_new`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Range`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeToInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeTo`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `CStr`.
  |
  = note: the lang item is first defined in crate `core` (which `scopeguard` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsize`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_peq`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_teq`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `copy`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `clone`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sync`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_kind`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_type`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pointee_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `metadata_type`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dyn_metadata`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `freeze`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `destruct`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `coerce_unsized`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dispatch_from_dyn`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `neg`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `not`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsafe_cell`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `va_list`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsize`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_peq`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_target`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_teq`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `receiver`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `copy`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `clone`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sync`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once_output`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `future_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_kind`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_state`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_type`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pointee_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_return`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unpin`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `metadata_type`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pin`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dyn_metadata`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `eq`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `partial_ord`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `freeze`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_display`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `destruct`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_bounds_check`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `coerce_unsized`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_info`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dispatch_from_dyn`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_location`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_no_unwind`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop_in_place`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `alloc_layout`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select_ct`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `neg`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `phantom_data`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `not`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `manually_drop`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `maybe_uninit`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `align_offset`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Try`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `slice_len_fn`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_residual`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_output`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `branch`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ready`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Pending`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_generator`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `get_context`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `poll`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Some`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `None`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ok`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Err`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Continue`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Break`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_future`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_iter`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `next`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `new_unchecked`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFrom`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFull`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `range_inclusive_new`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Range`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsafe_cell`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeToInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeTo`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `va_list`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `CStr`.
  |
  = note: the lang item is first defined in crate `core` (which `spin` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_target`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `receiver`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once_output`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `future_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_state`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_return`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `(T,)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:299:14
    |
299 |     where F: FnOnce(T),
    |              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `(T,)`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unpin`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pin`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `eq`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `partial_ord`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_display`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_bounds_check`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `(T,)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:309:14
    |
309 |     where F: FnOnce(T),
    |              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `(T,)`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_info`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_location`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_no_unwind`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop_in_place`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `alloc_layout`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select_ct`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `phantom_data`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `manually_drop`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `maybe_uninit`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `align_offset`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Try`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `slice_len_fn`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_residual`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_output`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `branch`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `(T,)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:368:14
    |
368 |     where F: FnOnce(T)
    |              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `(T,)`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ready`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Pending`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_generator`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `get_context`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `poll`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Some`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `None`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `(T,)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:424:14
    |
424 |           F: FnOnce(T),
    |              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `(T,)`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ok`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Err`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Continue`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Break`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_future`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_iter`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `next`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `(T,)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:429:14
    |
429 |     where F: FnOnce(T),
    |              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `(T,)`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `new_unchecked`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFrom`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFull`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `range_inclusive_new`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Range`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeToInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeTo`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `CStr`.
  |
  = note: the lang item is first defined in crate `core` (which `tock_registers` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `(T,)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:440:14
    |
440 |     where F: FnOnce(T),
    |              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `(T,)`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error[E0277]: the size for values of type `(T,)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:449:14
    |
449 |     where F: FnOnce(T),
    |              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `(T,)`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error[E0277]: the size for values of type `(T,)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:466:14
    |
466 |           F: FnOnce(T),
    |              ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `(T,)`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:469:46
    |
469 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:469:46
    |
469 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `MutexGuard<'_, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:179:31
    |
179 |     pub fn try_lock(&self) -> Option<MutexGuard<T>>
    |                               ^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `MutexGuard<'_, T>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsize`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_peq`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsize`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_teq`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_peq`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `copy`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_teq`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:212:10
    |
212 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `clone`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sync`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `copy`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_kind`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_type`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `clone`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pointee_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `metadata_type`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sync`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dyn_metadata`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/scopeguard-1.1.0/src/lib.rs:212:10
    |
212 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_kind`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `freeze`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_type`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `destruct`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pointee_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `coerce_unsized`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dispatch_from_dyn`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `metadata_type`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dyn_metadata`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `freeze`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:199:46
    |
199 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

For more information about this error, try `rustc --explain E0277`.
error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `destruct`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `neg`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `coerce_unsized`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `not`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dispatch_from_dyn`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:199:46
    |
199 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `neg`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `not`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `Mutex<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:211:27
    |
211 | impl<T: ?Sized + Default> Default for Mutex<T> {
    |                           ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Mutex<T>`
note: required by a bound in `Default`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:102:20
    |
102 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsafe_cell`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `va_list`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_target`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `receiver`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once_output`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `future_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_state`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_return`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unpin`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pin`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `eq`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `partial_ord`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsafe_cell`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_display`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `va_list`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_bounds_check`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_info`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_location`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_no_unwind`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_target`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop_in_place`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `receiver`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `alloc_layout`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `RwLockReadGuard<'_, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:198:31
    |
198 |     pub fn try_read(&self) -> Option<RwLockReadGuard<T>> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockReadGuard<'_, T>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select_ct`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `phantom_data`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `manually_drop`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `maybe_uninit`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once_output`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `align_offset`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `future_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Try`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `slice_len_fn`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_residual`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_output`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `branch`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_state`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ready`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_return`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `RwLockWriteGuard<'_, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:240:51
    |
240 |     fn try_write_internal(&self, strong: bool) -> Option<RwLockWriteGuard<T>> {
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockWriteGuard<'_, T>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unpin`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Pending`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pin`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_generator`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `get_context`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `eq`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `poll`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `partial_ord`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Some`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `None`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ok`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Err`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_display`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Continue`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Break`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `RwLockWriteGuard<'_, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:309:32
    |
309 |     pub fn try_write(&self) -> Option<RwLockWriteGuard<T>> {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockWriteGuard<'_, T>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_bounds_check`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_future`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_info`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_iter`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: could not compile `scopeguard` due to 116 previous errors
warning: build failed, waiting for other jobs to finish...
error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_location`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `next`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `new_unchecked`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_no_unwind`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFrom`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop_in_place`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFull`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `alloc_layout`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `range_inclusive_new`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Range`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `RwLockUpgradeableGuard<'_, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:327:43
    |
327 |     pub fn try_upgradeable_read(&self) -> Option<RwLockUpgradeableGuard<T>> {
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockUpgradeableGuard<'_, T>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select_ct`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeToInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeTo`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `phantom_data`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `CStr`.
  |
  = note: the lang item is first defined in crate `core` (which `byteorder` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `manually_drop`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `maybe_uninit`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `align_offset`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Try`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `slice_len_fn`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_residual`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:343:46
    |
343 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_output`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `branch`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ready`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Pending`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_generator`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `get_context`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:343:46
    |
343 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `poll`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Some`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `None`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ok`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Err`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Continue`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `RwLock<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:353:27
    |
353 | impl<T: ?Sized + Default> Default for RwLock<T> {
    |                           ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLock<T>`
note: required by a bound in `Default`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:102:20
    |
102 | pub trait Default: Sized {
    |                    ^^^^^ required by this bound in `Default`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Break`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_future`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_iter`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `next`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `new_unchecked`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFrom`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFull`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `E` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:104:76
    |
104 |     pub fn read_as_enum<E: TryFromValue<T, EnumType = E>>(self, val: T) -> Option<E> {
    |                                                                            ^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting this bound
    |
104 |     pub fn read_as_enum<E: TryFromValue<T, EnumType = E> + core::marker::Sized>(self, val: T) -> Option<E> {
    |                                                          +++++++++++++++++++++

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `range_inclusive_new`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `RwLockWriteGuard<'rwlock, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:361:52
    |
361 |     fn try_upgrade_internal(self, strong: bool) -> Result<RwLockWriteGuard<'rwlock, T>, Self> {
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockWriteGuard<'rwlock, T>`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Range`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeToInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeTo`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `CStr`.
  |
  = note: the lang item is first defined in crate `core` (which `micromath` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `RwLockUpgradeableGuard<'rwlock, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:361:52
    |
361 |     fn try_upgrade_internal(self, strong: bool) -> Result<RwLockWriteGuard<'rwlock, T>, Self> {
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockUpgradeableGuard<'rwlock, T>`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `Field<T, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:125:40
    |
125 | impl<T: UIntLike, R: RegisterLongName> Clone for Field<T, R> {
    |                                        ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Field<T, R>`
note: required by a bound in `Clone`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`

error[E0277]: the size for values of type `RwLockWriteGuard<'rwlock, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:420:33
    |
420 |     pub fn try_upgrade(self) -> Result<RwLockWriteGuard<'rwlock, T>, Self> {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockWriteGuard<'rwlock, T>`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `RwLockUpgradeableGuard<'rwlock, T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:420:33
    |
420 |     pub fn try_upgrade(self) -> Result<RwLockWriteGuard<'rwlock, T>, Self> {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `RwLockUpgradeableGuard<'rwlock, T>`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `Field<T, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:134:40
    |
134 | impl<T: UIntLike, R: RegisterLongName> Copy for Field<T, R> {}
    |                                        ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Field<T, R>`
note: required by a bound in `core::marker::Copy`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
    |
383 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `core::marker::Copy`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:543:6
    |
543 | ) -> Result<usize, usize> {
    |      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `FieldValue<T, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:228:40
    |
228 | impl<T: UIntLike, R: RegisterLongName> Add for FieldValue<T, R> {
    |                                        ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `FieldValue<T, R>`
note: required by a bound in `Add`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:100:15
    |
100 | pub trait Add<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Add`

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:23:22
    |
23  |     data: UnsafeCell<Option<T>>, // TODO remove option and use mem::uninitialized
    |                      ^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider restricting type parameter `T`
    |
21  | pub struct Once<T: core::marker::Sized> {
    |                  +++++++++++++++++++++

error[E0277]: the size for values of type `FieldValue<T, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:242:40
    |
242 | impl<T: UIntLike, R: RegisterLongName> AddAssign for FieldValue<T, R> {
    |                                        ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `FieldValue<T, R>`
note: required by a bound in `AddAssign`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:758:21
    |
758 | pub trait AddAssign<Rhs = Self> {
    |                     ^^^^^^^^^^ required by this bound in `AddAssign`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:27:46
    |
27  |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:27:46
    |
27  |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `<Self as TryFromValue<V>>::EnumType` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:255:26
    |
255 |     fn try_from(v: V) -> Option<Self::EnumType>;
    |                          ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `<Self as TryFromValue<V>>::EnumType`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting the associated type
    |
255 |     fn try_from(v: V) -> Option<Self::EnumType> where <Self as TryFromValue<V>>::EnumType: Sized;
    |                                                 ++++++++++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:99:18
    |
99  |         where F: FnOnce() -> T
    |                  ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `FnOnce`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/function.rs:240:18
    |
240 | pub trait FnOnce<Args> {
    |                  ^^^^ required by this bound in `FnOnce`

error[E0277]: the size for values of type `E` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/interfaces.rs:181:10
    |
181 |     ) -> Option<E> {
    |          ^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting this bound
    |
178 |     fn read_as_enum<E: TryFromValue<Self::T, EnumType = E> + core::marker::Sized>(
    |                                                            +++++++++++++++++++++

error[E0277]: the size for values of type `&'a T` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:136:33
    |
136 |     pub fn try<'a>(&'a self) -> Option<&'a T> {
    |                                 ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `&'a T`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `&'a T` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/once.rs:145:34
    |
145 |     pub fn wait<'a>(&'a self) -> Option<&'a T> {
    |                                  ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `&'a T`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs:129:6
    |
129 | impl F32Ext for f32 {
    |      ^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `F32Ext`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs:35:19
    |
35  | pub trait F32Ext: Sized {
    |                   ^^^^^ required by this bound in `F32Ext`

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:81:10
    |
81  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/mutex.rs:81:10
    |
81  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:72:10
    |
72  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:72:10
    |
72  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:81:10
    |
81  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:81:10
    |
81  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `E` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:64:89
    |
64  |     pub fn read_as_enum<E: TryFromValue<T, EnumType = E>>(&self, field: Field<T, R>) -> Option<E> {
    |                                                                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting this bound
    |
64  |     pub fn read_as_enum<E: TryFromValue<T, EnumType = E> + core::marker::Sized>(&self, field: Field<T, R>) -> Option<E> {
    |                                                          +++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:97:10
    |
97  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/spin-0.5.2/src/rw_lock.rs:97:10
    |
97  | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `micromath` due to 105 previous errors
error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:107:46
    |
107 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:107:46
    |
107 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `BigEndian` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1809:6
     |
1809 | impl Default for BigEndian {
     |      ^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `BigEndian`
note: required by a bound in `Default`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:102:20
     |
102  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `LittleEndian` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1839:6
     |
1839 | impl Default for LittleEndian {
     |      ^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `LittleEndian`
note: required by a bound in `Default`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:102:20
     |
102  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:89:7
    |
89  |     + Shr<usize, Output = Self>
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Shr`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:567:15
    |
567 | pub trait Shr<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shr`

error[E0277]: the size for values of type `BigEndian` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1970:6
     |
1970 | impl ByteOrder for BigEndian {
     |      ^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `BigEndian`
note: required by a bound in `ByteOrder`
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:212:7
     |
208  | pub trait ByteOrder:
     |           --------- required by a bound in this
...
212  |     + Default
     |       ^^^^^^^ required by this bound in `ByteOrder`

error[E0277]: the size for values of type `LittleEndian` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:2186:6
     |
2186 | impl ByteOrder for LittleEndian {
     |      ^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `LittleEndian`
note: required by a bound in `ByteOrder`
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:212:7
     |
208  | pub trait ByteOrder:
     |           --------- required by a bound in this
...
212  |     + Default
     |       ^^^^^^^ required by this bound in `ByteOrder`

error[E0277]: the size for values of type `FieldValue<T, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:157:10
    |
157 | #[derive(Copy, Clone)]
    |          ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `FieldValue<T, R>`
note: required by a bound in `core::marker::Copy`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
    |
383 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `core::marker::Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `spin` due to 134 previous errors
error[E0277]: the size for values of type `FieldValue<T, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:157:16
    |
157 | #[derive(Copy, Clone)]
    |                ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `FieldValue<T, R>`
note: required by a bound in `Clone`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `BigEndian` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1806:10
     |
1806 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `BigEndian`
note: required by a bound in `Clone`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `FieldValue<u8, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
189 | FieldValue_impl_for!(u8);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `FieldValue<u8, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
189 | FieldValue_impl_for!(u8);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `BigEndian` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1806:17
     |
1806 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |                 ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `BigEndian`
note: required by a bound in `core::marker::Copy`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
     |
383  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `core::marker::Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `FieldValue<u16, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
190 | FieldValue_impl_for!(u16);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `FieldValue<u16, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
190 | FieldValue_impl_for!(u16);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1806:23
     |
1806 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
     |
504  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `FieldValue<u32, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
191 | FieldValue_impl_for!(u32);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `FieldValue<u32, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1806:23
     |
1806 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
     |
504  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
191 | FieldValue_impl_for!(u32);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `FieldValue<u64, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
192 | FieldValue_impl_for!(u64);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `FieldValue<u64, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::cmp::Ordering` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1806:56
     |
1806 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |                                                        ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `core::cmp::Ordering`
note: required by a bound in `Option`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
     |
518  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
192 | FieldValue_impl_for!(u64);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LittleEndian` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1836:10
     |
1836 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `LittleEndian`
note: required by a bound in `Clone`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `FieldValue<u128, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
193 | FieldValue_impl_for!(u128);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `FieldValue<u128, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LittleEndian` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1836:17
     |
1836 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |                 ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `LittleEndian`
note: required by a bound in `core::marker::Copy`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
     |
383  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `core::marker::Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
193 | FieldValue_impl_for!(u128);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1836:23
     |
1836 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
     |
504  | pub enum Result<T, E> {
     |                 ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1836:23
     |
1836 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |                       ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
     |
504  | pub enum Result<T, E> {
     |                    ^ required by this bound in `Result`
     = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `FieldValue<usize, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
194 | FieldValue_impl_for!(usize);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `FieldValue<usize, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/fields.rs:181:35
    |
181 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
194 | FieldValue_impl_for!(usize);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::cmp::Ordering` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs:1836:56
     |
1836 | #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]
     |                                                        ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `core::cmp::Ordering`
note: required by a bound in `Option`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
     |
518  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LocalRegisterCopy<T, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:30:10
    |
30  | #[derive(Copy, Clone)]
    |          ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `LocalRegisterCopy<T, R>`
note: required by a bound in `core::marker::Copy`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
    |
383 | pub trait Copy: Clone {
    |                 ^^^^^ required by this bound in `core::marker::Copy`
    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LocalRegisterCopy<T, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:30:16
    |
30  | #[derive(Copy, Clone)]
    |                ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `LocalRegisterCopy<T, R>`
note: required by a bound in `Clone`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
    |
110 | pub trait Clone: Sized {
    |                  ^^^^^ required by this bound in `Clone`
    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LocalRegisterCopy<u8, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
124 | From_impl_for!(u8);
    | ------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `LocalRegisterCopy<u8, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
124 | From_impl_for!(u8);
    | ------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LocalRegisterCopy<u16, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
125 | From_impl_for!(u16);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `LocalRegisterCopy<u16, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
125 | From_impl_for!(u16);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LocalRegisterCopy<u32, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
126 | From_impl_for!(u32);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `LocalRegisterCopy<u32, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
126 | From_impl_for!(u32);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LocalRegisterCopy<u64, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
127 | From_impl_for!(u64);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `LocalRegisterCopy<u64, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
127 | From_impl_for!(u64);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `byteorder` due to 118 previous errors
error[E0277]: the size for values of type `LocalRegisterCopy<u128, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
128 | From_impl_for!(u128);
    | -------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `LocalRegisterCopy<u128, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
128 | From_impl_for!(u128);
    | -------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `LocalRegisterCopy<usize, R>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
129 | From_impl_for!(usize);
    | --------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `LocalRegisterCopy<usize, R>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/local_register.rs:116:35
    |
116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
129 | From_impl_for!(usize);
    | --------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:109:14
    |
109 |         impl UIntLike for $type {
    |              ^^^^^^^^ doesn't have a size known at compile-time
...
117 | UIntLike_impl_for!(u8);
    | ---------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `UIntLike`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:92:7
    |
83  | pub trait UIntLike:
    |           -------- required by a bound in this
...
92  |     + Clone
    |       ^^^^^ required by this bound in `UIntLike`
    = note: this error originates in the macro `UIntLike_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:109:14
    |
109 |         impl UIntLike for $type {
    |              ^^^^^^^^ doesn't have a size known at compile-time
...
118 | UIntLike_impl_for!(u16);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `UIntLike`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:92:7
    |
83  | pub trait UIntLike:
    |           -------- required by a bound in this
...
92  |     + Clone
    |       ^^^^^ required by this bound in `UIntLike`
    = note: this error originates in the macro `UIntLike_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:109:14
    |
109 |         impl UIntLike for $type {
    |              ^^^^^^^^ doesn't have a size known at compile-time
...
119 | UIntLike_impl_for!(u32);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `UIntLike`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:92:7
    |
83  | pub trait UIntLike:
    |           -------- required by a bound in this
...
92  |     + Clone
    |       ^^^^^ required by this bound in `UIntLike`
    = note: this error originates in the macro `UIntLike_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:109:14
    |
109 |         impl UIntLike for $type {
    |              ^^^^^^^^ doesn't have a size known at compile-time
...
120 | UIntLike_impl_for!(u64);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `UIntLike`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:92:7
    |
83  | pub trait UIntLike:
    |           -------- required by a bound in this
...
92  |     + Clone
    |       ^^^^^ required by this bound in `UIntLike`
    = note: this error originates in the macro `UIntLike_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:109:14
    |
109 |         impl UIntLike for $type {
    |              ^^^^^^^^ doesn't have a size known at compile-time
...
121 | UIntLike_impl_for!(u128);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `UIntLike`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:92:7
    |
83  | pub trait UIntLike:
    |           -------- required by a bound in this
...
92  |     + Clone
    |       ^^^^^ required by this bound in `UIntLike`
    = note: this error originates in the macro `UIntLike_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:109:14
    |
109 |         impl UIntLike for $type {
    |              ^^^^^^^^ doesn't have a size known at compile-time
...
122 | UIntLike_impl_for!(usize);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `UIntLike`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/tock-registers-0.7.0/src/lib.rs:92:7
    |
83  | pub trait UIntLike:
    |           -------- required by a bound in this
...
92  |     + Clone
    |       ^^^^^ required by this bound in `UIntLike`
    = note: this error originates in the macro `UIntLike_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `tock-registers` due to 149 previous errors
error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsize`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_peq`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_teq`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `copy`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `clone`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sync`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_kind`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_type`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pointee_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `metadata_type`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dyn_metadata`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `freeze`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `destruct`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `coerce_unsized`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dispatch_from_dyn`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `neg`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `not`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsafe_cell`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `va_list`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_target`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `receiver`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once_output`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `future_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_state`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_return`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unpin`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pin`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `eq`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `partial_ord`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_display`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_bounds_check`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_info`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_location`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_no_unwind`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop_in_place`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `alloc_layout`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select_ct`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `phantom_data`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `manually_drop`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `maybe_uninit`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `align_offset`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Try`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `slice_len_fn`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_residual`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_output`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `branch`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ready`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Pending`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_generator`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `get_context`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `poll`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Some`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `None`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ok`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Err`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Continue`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Break`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_future`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_iter`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `next`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `new_unchecked`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFrom`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFull`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `range_inclusive_new`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Range`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeToInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeTo`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `CStr`.
  |
  = note: the lang item is first defined in crate `core` (which `num_traits` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `T` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs:49:30
   |
49 | impl<T: Bounded> Bounded for Wrapping<T> {
   |                              ^^^^^^^^^^^ doesn't have a size known at compile-time
   |
note: required by a bound in `Wrapping`
  --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
   |
42 | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
   |                     ^ required by this bound in `Wrapping`
help: consider further restricting this bound
   |
49 | impl<T: Bounded + core::marker::Sized> Bounded for Wrapping<T> {
   |                 +++++++++++++++++++++

error[E0277]: the size for values of type `T` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs:50:23
   |
50 |     fn min_value() -> Self {
   |                       ^^^^ doesn't have a size known at compile-time
   |
note: required by a bound in `Wrapping`
  --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
   |
42 | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
   |                     ^ required by this bound in `Wrapping`
help: consider further restricting this bound
   |
49 | impl<T: Bounded + core::marker::Sized> Bounded for Wrapping<T> {
   |                 +++++++++++++++++++++

error[E0277]: the size for values of type `T` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/bounds.rs:53:23
   |
53 |     fn max_value() -> Self {
   |                       ^^^^ doesn't have a size known at compile-time
   |
note: required by a bound in `Wrapping`
  --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
   |
42 | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
   |                     ^ required by this bound in `Wrapping`
help: consider further restricting this bound
   |
49 | impl<T: Bounded + core::marker::Sized> Bounded for Wrapping<T> {
   |                 +++++++++++++++++++++

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:23:27
    |
23  |     fn to_isize(&self) -> Option<isize> {
    |                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:30:24
    |
30  |     fn to_i8(&self) -> Option<i8> {
    |                        ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:37:25
    |
37  |     fn to_i16(&self) -> Option<i16> {
    |                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:44:25
    |
44  |     fn to_i32(&self) -> Option<i32> {
    |                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:50:25
    |
50  |     fn to_i64(&self) -> Option<i64>;
    |                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:69:27
    |
69  |     fn to_usize(&self) -> Option<usize> {
    |                           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:76:24
    |
76  |     fn to_u8(&self) -> Option<u8> {
    |                        ^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:83:25
    |
83  |     fn to_u16(&self) -> Option<u16> {
    |                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:90:25
    |
90  |     fn to_u32(&self) -> Option<u32> {
    |                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:96:25
    |
96  |     fn to_u64(&self) -> Option<u64>;
    |                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:116:25
    |
116 |     fn to_f32(&self) -> Option<f32> {
    |                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:128:25
    |
128 |     fn to_f64(&self) -> Option<f64> {
    |                         ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:619:38
    |
619 | impl<T: ToPrimitive> ToPrimitive for Wrapping<T> {
    |                                      ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
help: consider further restricting this bound
    |
619 | impl<T: ToPrimitive + core::marker::Sized> ToPrimitive for Wrapping<T> {
    |                     +++++++++++++++++++++

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:652:24
    |
652 | impl<T: FromPrimitive> FromPrimitive for Wrapping<T> {
    |                        ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:738:18
    |
738 | impl<T: NumCast> NumCast for Wrapping<T> {
    |                  ^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:739:38
    |
739 |     fn from<U: ToPrimitive>(n: U) -> Option<Self> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs:749:6
    |
749 | impl FloatCore for f32 {
    |      ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `FloatCore`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs:16:72
    |
16  | pub trait FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy {
    |                                                                        ^^^^ required by this bound in `FloatCore`

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs:823:6
    |
823 | impl FloatCore for f64 {
    |      ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `FloatCore`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/float.rs:16:72
    |
16  | pub trait FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy {
    |                                                                        ^^^^ required by this bound in `FloatCore`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:65:15
   |
65 | impl<T: Zero> Zero for Wrapping<T>
   |               ^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:67:22
    |
67  |     Wrapping<T>: Add<Output = Wrapping<T>>,
    |                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Add`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:100:15
    |
100 | pub trait Add<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Add`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:154:14
    |
154 | impl<T: One> One for Wrapping<T>
    |              ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:156:22
    |
156 |     Wrapping<T>: Mul<Output = Wrapping<T>>,
    |                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Mul`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:336:15
    |
336 | pub trait Mul<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Mul`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:47:7
    |
47  |     + Shl<usize, Output = Self>
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Shl`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:448:15
    |
448 | pub trait Shl<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shl`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:31
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Shl`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:448:15
    |
448 | pub trait Shl<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shl`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:31
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Shr`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:567:15
    |
567 | pub trait Shr<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shr`

error[E0277]: the size for values of type `Self` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:22:44
   |
22 |     fn overflowing_add(&self, v: &Self) -> (Self, bool);
   |                                            ^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = note: only the last element of a tuple may have a dynamically sized type
help: consider further restricting `Self`
   |
22 |     fn overflowing_add(&self, v: &Self) -> (Self, bool) where Self: core::marker::Sized;
   |                                                         +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `Self` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:45:44
   |
45 |     fn overflowing_sub(&self, v: &Self) -> (Self, bool);
   |                                            ^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = note: only the last element of a tuple may have a dynamically sized type
help: consider further restricting `Self`
   |
45 |     fn overflowing_sub(&self, v: &Self) -> (Self, bool) where Self: core::marker::Sized;
   |                                                         +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `Self` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:68:44
   |
68 |     fn overflowing_mul(&self, v: &Self) -> (Self, bool);
   |                                            ^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = note: only the last element of a tuple may have a dynamically sized type
help: consider further restricting `Self`
   |
68 |     fn overflowing_mul(&self, v: &Self) -> (Self, bool) where Self: core::marker::Sized;
   |                                                         +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:32
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Shl`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:448:15
    |
448 | pub trait Shl<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shl`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:32
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Shr`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:567:15
    |
567 | pub trait Shr<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shr`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:222:22
    |
222 | impl<T: WrappingAdd> WrappingAdd for Wrapping<T>
    |                      ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `WrappingAdd`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
    |
24  | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingAdd`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:224:22
    |
224 |     Wrapping<T>: Add<Output = Wrapping<T>>,
    |                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Add`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:100:15
    |
100 | pub trait Add<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Add`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:230:22
    |
230 | impl<T: WrappingSub> WrappingSub for Wrapping<T>
    |                      ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `WrappingSub`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
    |
47  | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingSub`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:232:22
    |
232 |     Wrapping<T>: Sub<Output = Wrapping<T>>,
    |                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Sub`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:207:15
    |
207 | pub trait Sub<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Sub`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:238:22
    |
238 | impl<T: WrappingMul> WrappingMul for Wrapping<T>
    |                      ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `WrappingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
    |
70  | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingMul`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:240:22
    |
240 |     Wrapping<T>: Mul<Output = Wrapping<T>>,
    |                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Mul`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:336:15
    |
336 | pub trait Mul<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Mul`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:246:22
    |
246 | impl<T: WrappingNeg> WrappingNeg for Wrapping<T>
    |                      ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:254:22
    |
254 | impl<T: WrappingShl> WrappingShl for Wrapping<T>
    |                      ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:256:29
    |
256 |     Wrapping<T>: Shl<usize, Output = Wrapping<T>>,
    |                             ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Shl`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:448:15
    |
448 | pub trait Shl<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shl`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:262:22
    |
262 | impl<T: WrappingShr> WrappingShr for Wrapping<T>
    |                      ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:264:29
    |
264 |     Wrapping<T>: Shr<usize, Output = Wrapping<T>>,
    |                             ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Shr`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/bit.rs:567:15
    |
567 | pub trait Shr<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Shr`

error[E0277]: the size for values of type `Self` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:41
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                         ^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `NumOps`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:101:18
    |
101 | pub trait NumOps<Rhs = Self, Output = Self>:
    |                  ^^^^^^^^^^ required by this bound in `NumOps`
help: consider further restricting `Self`
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps + core::marker::Sized {
    |                                                +++++++++++++++++++++
help: consider relaxing the implicit `Sized` restriction
    |
101 | pub trait NumOps<Rhs = Self: ?Sized, Output = Self>:
    |                            ++++++++

error[E0277]: the size for values of type `Self` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:41
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                         ^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `NumOps`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:101:18
    |
101 | pub trait NumOps<Rhs = Self, Output = Self>:
    |                  ^^^^^^^^^^ required by this bound in `NumOps`
help: consider further restricting `Self`
    |
95  |     fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr> where Self: core::marker::Sized;
    |                                                                                     +++++++++++++++++++++++++++++++
help: consider relaxing the implicit `Sized` restriction
    |
101 | pub trait NumOps<Rhs = Self: ?Sized, Output = Self>:
    |                            ++++++++

error[E0277]: the size for values of type `<Self as Num>::FromStrRadixErr` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:95:49
    |
95  |     fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr>;
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `<Self as Num>::FromStrRadixErr`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
help: consider further restricting the associated type
    |
95  |     fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr> where <Self as Num>::FromStrRadixErr: Sized;
    |                                                                                     +++++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `Rhs` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:102:5
    |
102 |     Add<Rhs, Output = Output>
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Add`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:100:15
    |
100 | pub trait Add<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Add`
help: consider further restricting type parameter `Rhs`
    |
106 |     + Rem<Rhs, Output = Output> where Rhs: core::marker::Sized
    |                                 ++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `Rhs` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:111:17
    |
111 |     T: Add<Rhs, Output = Output>
    |                 ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Add`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:100:15
    |
100 | pub trait Add<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Add`
help: consider further restricting type parameter `Rhs`
    |
115 |         + Rem<Rhs, Output = Output>, Rhs: core::marker::Sized
    |                                    ++++++++++++++++++++++++++

error[E0277]: the size for values of type `Self` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:123:25
    |
123 | pub trait NumRef: Num + for<'r> NumOps<&'r Self> {}
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `NumOps`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:101:30
    |
101 | pub trait NumOps<Rhs = Self, Output = Self>:
    |                              ^^^^^^^^^^^^^ required by this bound in `NumOps`
help: consider further restricting `Self`
    |
123 | pub trait NumRef: Num + for<'r> NumOps<&'r Self> + core::marker::Sized {}
    |                                                  +++++++++++++++++++++
help: consider relaxing the implicit `Sized` restriction
    |
101 | pub trait NumOps<Rhs = Self, Output = Self: ?Sized>:
    |                                           ++++++++

error[E0277]: the size for values of type `Rhs` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:137:5
    |
137 |     AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> + RemAssign<Rhs>
    |     ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `AddAssign`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:758:21
    |
758 | pub trait AddAssign<Rhs = Self> {
    |                     ^^^^^^^^^^ required by this bound in `AddAssign`
help: consider further restricting type parameter `Rhs`
    |
137 |     AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> + RemAssign<Rhs> where Rhs: core::marker::Sized
    |                                                                                        ++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `Rhs` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:142:8
    |
142 |     T: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> + RemAssign<Rhs>
    |        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `AddAssign`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:758:21
    |
758 | pub trait AddAssign<Rhs = Self> {
    |                     ^^^^^^^^^^ required by this bound in `AddAssign`
help: consider further restricting type parameter `Rhs`
    |
142 |     T: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> + RemAssign<Rhs>, Rhs: core::marker::Sized
    |                                                                                          ++++++++++++++++++++++++++

error[E0277]: the size for values of type `Self` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:149:28
    |
149 | pub trait NumAssign: Num + NumAssignOps {}
    |                            ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `NumAssignOps`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:136:24
    |
136 | pub trait NumAssignOps<Rhs = Self>:
    |                        ^^^^^^^^^^ required by this bound in `NumAssignOps`
help: consider further restricting `Self`
    |
149 | pub trait NumAssign: Num + NumAssignOps + core::marker::Sized {}
    |                                         +++++++++++++++++++++
help: consider relaxing the implicit `Sized` restriction
    |
136 | pub trait NumAssignOps<Rhs = Self: ?Sized>:
    |                                  ++++++++

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:176:14
    |
176 | impl<T: Num> Num for Wrapping<T>
    |              ^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:178:22
    |
178 |     Wrapping<T>: Add<Output = Wrapping<T>>
    |                      ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Add`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ops/arith.rs:100:15
    |
100 | pub trait Add<Rhs = Self> {
    |               ^^^^^^^^^^ required by this bound in `Add`

error[E0277]: the size for values of type `<T as Num>::FromStrRadixErr` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:185:49
    |
185 |     fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr> {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `<T as Num>::FromStrRadixErr`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
help: consider further restricting the associated type
    |
185 |     fn from_str_radix(str: &str, radix: u32) -> Result<Self, Self::FromStrRadixErr> where <T as Num>::FromStrRadixErr: Sized {
    |                                                                                     ++++++++++++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:203:46
    |
203 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:203:46
    |
203 |     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
    |                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:191:33
    |
191 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:195:33
    |
195 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
202 | impl_to_primitive_int!(isize);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:191:33
    |
191 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:195:33
    |
195 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
203 | impl_to_primitive_int!(i8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:191:33
    |
191 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:195:33
    |
195 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
204 | impl_to_primitive_int!(i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:191:33
    |
191 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:195:33
    |
195 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sized`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsize`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_peq`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `structural_teq`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `copy`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `clone`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sync`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_kind`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `discriminant_type`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pointee_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
205 | impl_to_primitive_int!(i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `metadata_type`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dyn_metadata`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `freeze`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `destruct`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `coerce_unsized`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:191:33
    |
191 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `dispatch_from_dyn`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:195:33
    |
195 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `neg`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `not`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `add_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `sub_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `mul_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `div_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `rem_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitxor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitand_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `bitor_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shl_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `shr_assign`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `index_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unsafe_cell`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `va_list`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `deref_target`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `receiver`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_mut`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `fn_once_output`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:140:30
    |
140 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `future_trait`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_state`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `generator_return`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `unpin`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `pin`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `eq`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `partial_ord`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_display`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_panic_fmt`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_bounds_check`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_info`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_location`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `panic_no_unwind`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `drop_in_place`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `alloc_layout`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `const_eval_select_ct`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `phantom_data`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `manually_drop`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `maybe_uninit`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `align_offset`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Try`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `slice_len_fn`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_residual`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_output`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `branch`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:156:30
    |
156 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
206 | impl_to_primitive_int!(i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_int_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ready`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Pending`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from_generator`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `get_context`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `poll`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `from`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Some`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `None`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:264:33
    |
264 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Ok`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Err`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Continue`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Break`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_future`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `into_iter`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `next`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:268:33
    |
268 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `new_unchecked`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFrom`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeFull`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `range_inclusive_new`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `Range`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeToInclusive`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `RangeTo`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: duplicate lang item in crate `core` (which `rustc_std_workspace_core` depends on): `CStr`.
  |
  = note: the lang item is first defined in crate `core` (which `az` depends on)
  = note: first definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-b6afb886515997f4.rmeta
  = note: second definition in `core` loaded from /home/hyperswine/Documents/GitHub/Neutron/target/aarch64-unknown-none/debug/deps/libcore-9047c11f94ebd0f7.rmeta

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | impl_to_primitive_uint!(usize);
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:264:33
    |
264 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:268:33
    |
268 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
276 | impl_to_primitive_uint!(u8);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:264:33
    |
264 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:268:33
    |
268 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
277 | impl_to_primitive_uint!(u16);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:264:33
    |
264 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:268:33
    |
268 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
278 | impl_to_primitive_uint!(u32);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:264:33
    |
264 |             fn to_f32(&self) -> Option<f32> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:268:33
    |
268 |             fn to_f64(&self) -> Option<f64> {
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:214:30
    |
214 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:229:30
    |
229 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
279 | impl_to_primitive_uint!(u64);
    | ---------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_uint_to_uint` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:286:30
    |
286 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:286:30
    |
286 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
398 | impl_to_primitive_float!(f32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:314:30
    |
314 |         fn $method(&self) -> Option<$i> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_signed_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:344:30
    |
344 |         fn $method(&self) -> Option<$u> {
    |                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_unsigned_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:286:30
    |
286 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:286:30
    |
286 |         fn $method(&self) -> Option<$DstT> {
    |                              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
399 | impl_to_primitive_float!(f64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_float_to_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
592 | impl_from_primitive!(isize, to_isize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
593 | impl_from_primitive!(i8, to_i8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
594 | impl_from_primitive!(i16, to_i16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
595 | impl_from_primitive!(i32, to_i32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:48:41
    |
48  |     fn fmt(&self, f: &mut Formatter) -> FmtResult {
    |                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:48:41
    |
48  |     fn fmt(&self, f: &mut Formatter) -> FmtResult {
    |                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:54:41
    |
54  |     fn fmt(&self, f: &mut Formatter) -> FmtResult {
    |                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:54:41
    |
54  |     fn fmt(&self, f: &mut Formatter) -> FmtResult {
    |                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:60:41
    |
60  |     fn fmt(&self, f: &mut Formatter) -> FmtResult {
    |                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:60:41
    |
60  |     fn fmt(&self, f: &mut Formatter) -> FmtResult {
    |                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:66:41
    |
66  |     fn fmt(&self, f: &mut Formatter) -> FmtResult {
    |                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:66:41
    |
66  |     fn fmt(&self, f: &mut Formatter) -> FmtResult {
    |                                         ^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Dst` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:188:30
    |
188 |     fn checked_cast(self) -> Option<Dst>;
    |                              ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider restricting type parameter `Dst`
    |
186 | pub trait CheckedCast<Dst: core::marker::Sized> {
    |                          +++++++++++++++++++++

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
596 | impl_from_primitive!(i64, to_i64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Dst` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:366:34
    |
366 | impl<Src: CheckedCast<Dst>, Dst> CheckedCastFrom<Src> for Dst {
    |                                  ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `CheckedCastFrom`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:361:33
    |
361 | pub trait CheckedCastFrom<Src>: Sized {
    |                                 ^^^^^ required by this bound in `CheckedCastFrom`
help: consider restricting type parameter `Dst`
    |
366 | impl<Src: CheckedCast<Dst>, Dst: core::marker::Sized> CheckedCastFrom<Src> for Dst {
    |                                +++++++++++++++++++++

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Dst` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:369:39
    |
369 |     fn checked_cast_from(src: Src) -> Option<Self> {
    |                                       ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider restricting type parameter `Dst`
    |
366 | impl<Src: CheckedCast<Dst>, Dst: core::marker::Sized> CheckedCastFrom<Src> for Dst {
    |                                +++++++++++++++++++++

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Self` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:471:43
    |
471 |     fn overflowing_cast_from(src: Src) -> (Self, bool);
    |                                           ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = note: only the last element of a tuple may have a dynamically sized type
help: consider further restricting `Self`
    |
471 |     fn overflowing_cast_from(src: Src) -> (Self, bool) where Self: core::marker::Sized;
    |                                                        +++++++++++++++++++++++++++++++

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Dst` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:474:38
    |
474 | impl<Src: OverflowingCast<Dst>, Dst> OverflowingCastFrom<Src> for Dst {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `OverflowingCastFrom`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:469:37
    |
469 | pub trait OverflowingCastFrom<Src>: Sized {
    |                                     ^^^^^ required by this bound in `OverflowingCastFrom`
help: consider restricting type parameter `Dst`
    |
474 | impl<Src: OverflowingCast<Dst>, Dst: core::marker::Sized> OverflowingCastFrom<Src> for Dst {
    |                                    +++++++++++++++++++++

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Dst` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:667:33
    |
667 |     fn checked_as<Dst>(self) -> Option<Dst>
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting type parameter `Dst`
    |
669 |         Self: CheckedCast<Dst>, Dst: core::marker::Sized;
    |                               ++++++++++++++++++++++++++

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Dst` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:675:33
    |
675 |     fn checked_as<Dst>(self) -> Option<Dst>
    |                                 ^^^^^^^^^^^ doesn't have a size known at compile-time
    |
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
help: consider further restricting type parameter `Dst`
    |
677 |         Self: CheckedCast<Dst>, Dst: core::marker::Sized
    |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Dst` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:1027:62
     |
1027 | pub fn checked_cast<Src: CheckedCast<Dst>, Dst>(src: Src) -> Option<Dst> {
     |                                                              ^^^^^^^^^^^ doesn't have a size known at compile-time
     |
note: required by a bound in `Option`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
     |
518  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
help: consider restricting type parameter `Dst`
     |
1027 | pub fn checked_cast<Src: CheckedCast<Dst>, Dst: core::marker::Sized>(src: Src) -> Option<Dst> {
     |                                               +++++++++++++++++++++

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
599 | impl_from_primitive!(usize, to_usize);
    | ------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:30:38
    |
30  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
44  | convert! { i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize, f32, f64 => f32 }
    | -------------------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `convert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/float.rs:30:38
    |
30  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
45  | convert! { i8, i16, i32, i64, i128, isize, u8, u16, u32, u64, u128, usize, f32, f64 => f64 }
    | -------------------------------------------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `convert` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
600 | impl_from_primitive!(u8, to_u8);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
601 | impl_from_primitive!(u16, to_u16);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
602 | impl_from_primitive!(u32, to_u32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
348 | float_to_int! { f32, u32, i32 => i8 i16 i32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
349 | float_to_int! { f32, u64, i64 => i64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
349 | float_to_int! { f32, u64, i64 => i64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
349 | float_to_int! { f32, u64, i64 => i64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
603 | impl_from_primitive!(u64, to_u64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
349 | float_to_int! { f32, u64, i64 => i64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
349 | float_to_int! { f32, u64, i64 => i64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
349 | float_to_int! { f32, u64, i64 => i64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
349 | float_to_int! { f32, u64, i64 => i64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
349 | float_to_int! { f32, u64, i64 => i64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
350 | float_to_int! { f32, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
350 | float_to_int! { f32, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
350 | float_to_int! { f32, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
350 | float_to_int! { f32, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
350 | float_to_int! { f32, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
350 | float_to_int! { f32, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
350 | float_to_int! { f32, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
606 | impl_from_primitive!(f32, to_f32);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
350 | float_to_int! { f32, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:527:14
    |
527 |         impl FromPrimitive for $T {
    |              ^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `FromPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:411:26
    |
411 | pub trait FromPrimitive: Sized {
    |                          ^^^^^ required by this bound in `FromPrimitive`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
354 | float_to_int! { f32, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:529:40
    |
529 |             fn from_isize(n: isize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:533:34
    |
533 |             fn from_i8(n: i8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
354 | float_to_int! { f32, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:537:36
    |
537 |             fn from_i16(n: i16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
354 | float_to_int! { f32, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:541:36
    |
541 |             fn from_i32(n: i32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
354 | float_to_int! { f32, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:545:36
    |
545 |             fn from_i64(n: i64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<isize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
354 | float_to_int! { f32, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<isize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:555:40
    |
555 |             fn from_usize(n: usize) -> Option<$T> {
    |                                        ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
354 | float_to_int! { f32, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:559:34
    |
559 |             fn from_u8(n: u8) -> Option<$T> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
354 | float_to_int! { f32, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
354 | float_to_int! { f32, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:563:36
    |
563 |             fn from_u16(n: u16) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:567:36
    |
567 |             fn from_u32(n: u32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:571:36
    |
571 |             fn from_u64(n: u64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:581:36
    |
581 |             fn from_f32(n: f32) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:585:36
    |
585 |             fn from_f64(n: f64) -> Option<$T> {
    |                                    ^^^^^^^^^^ doesn't have a size known at compile-time
...
607 | impl_from_primitive!(f64, to_f64);
    | --------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `T` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:20
    |
613 |           fn $method(&self) -> Option<$i> {
    |                      ^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider further restricting this bound
    |
619 | impl<T: ToPrimitive + core::marker::Sized> ToPrimitive for Wrapping<T> {
    |                     +++++++++++++++++++++

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
355 | float_to_int! { f32, u32, i32 => u8 u16 u32 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
356 | float_to_int! { f32, u64, i64 => u64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:613:30
    |
613 |           fn $method(&self) -> Option<$i> {
    |                                ^^^^^^^^^^ doesn't have a size known at compile-time
...
620 | /     impl_to_primitive_wrapping! {
621 | |         fn to_isize -> isize;
622 | |         fn to_i8 -> i8;
623 | |         fn to_i16 -> i16;
...   |
638 | |         fn to_f64 -> f64;
639 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_to_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
356 | float_to_int! { f32, u64, i64 => u64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<T>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:646:30
    |
646 |           fn $method(n: $i) -> Option<Self> {
    |                                ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
653 | /     impl_from_primitive_wrapping! {
654 | |         fn from_isize(isize);
655 | |         fn from_i8(i8);
656 | |         fn from_i16(i16);
...   |
671 | |         fn from_f64(f64);
672 | |     }
    | |_____- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<T>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_from_primitive_wrapping` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
356 | float_to_int! { f32, u64, i64 => u64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
356 | float_to_int! { f32, u64, i64 => u64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
356 | float_to_int! { f32, u64, i64 => u64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
356 | float_to_int! { f32, u64, i64 => u64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
356 | float_to_int! { f32, u64, i64 => u64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
356 | float_to_int! { f32, u64, i64 => u64 }
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
357 | float_to_int! { f32, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
357 | float_to_int! { f32, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
721 | impl_num_cast!(u8, to_u8);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
357 | float_to_int! { f32, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
357 | float_to_int! { f32, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
721 | impl_num_cast!(u8, to_u8);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
357 | float_to_int! { f32, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
722 | impl_num_cast!(u16, to_u16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
357 | float_to_int! { f32, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
722 | impl_num_cast!(u16, to_u16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
357 | float_to_int! { f32, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
723 | impl_num_cast!(u32, to_u32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
357 | float_to_int! { f32, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
723 | impl_num_cast!(u32, to_u32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
361 | float_to_int! { f32, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
724 | impl_num_cast!(u64, to_u64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
361 | float_to_int! { f32, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
724 | impl_num_cast!(u64, to_u64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
361 | float_to_int! { f32, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
727 | impl_num_cast!(usize, to_usize);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
361 | float_to_int! { f32, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
727 | impl_num_cast!(usize, to_usize);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<usize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
361 | float_to_int! { f32, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<usize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
728 | impl_num_cast!(i8, to_i8);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
361 | float_to_int! { f32, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
728 | impl_num_cast!(i8, to_i8);
    | ------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
361 | float_to_int! { f32, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
729 | impl_num_cast!(i16, to_i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
361 | float_to_int! { f32, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
729 | impl_num_cast!(i16, to_i16);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
730 | impl_num_cast!(i32, to_i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
730 | impl_num_cast!(i32, to_i32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
731 | impl_num_cast!(i64, to_i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
731 | impl_num_cast!(i64, to_i64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
734 | impl_num_cast!(isize, to_isize);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
734 | impl_num_cast!(isize, to_isize);
    | ------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
735 | impl_num_cast!(f32, to_f32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
735 | impl_num_cast!(f32, to_f32);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:709:14
    |
709 |         impl NumCast for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
736 | impl_num_cast!(f64, to_f64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `NumCast`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:691:20
    |
691 | pub trait NumCast: Sized + ToPrimitive {
    |                    ^^^^^ required by this bound in `NumCast`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:712:46
    |
712 |             fn from<N: ToPrimitive>(n: N) -> Option<$T> {
    |                                              ^^^^^^^^^^ doesn't have a size known at compile-time
...
736 | impl_num_cast!(f64, to_f64);
    | --------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `impl_num_cast` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `char` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `char`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
363 | float_to_int! { f64, u64, i64 => i8 i16 i32 i64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
364 | float_to_int! { f64, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
364 | float_to_int! { f64, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
364 | float_to_int! { f64, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
364 | float_to_int! { f64, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
797 | impl_as_primitive!(u8 => { char, f32, f64 });
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
364 | float_to_int! { f64, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
364 | float_to_int! { f64, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
364 | float_to_int! { f64, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
364 | float_to_int! { f64, u128, i128 => i128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
365 | float_to_int! { f64, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
365 | float_to_int! { f64, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
365 | float_to_int! { f64, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
365 | float_to_int! { f64, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<isize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
365 | float_to_int! { f64, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<isize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
365 | float_to_int! { f64, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
365 | float_to_int! { f64, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
365 | float_to_int! { f64, u64, i64 => isize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
798 | impl_as_primitive!(i8 => { f32, f64 });
    | -------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
366 | float_to_int! { f64, u64, i64 => u8 u16 u32 u64 }
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
367 | float_to_int! { f64, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
367 | float_to_int! { f64, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
367 | float_to_int! { f64, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
799 | impl_as_primitive!(u16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
367 | float_to_int! { f64, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
367 | float_to_int! { f64, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
367 | float_to_int! { f64, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
367 | float_to_int! { f64, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
367 | float_to_int! { f64, u128, i128 => u128 }
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
368 | float_to_int! { f64, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
368 | float_to_int! { f64, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
368 | float_to_int! { f64, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
368 | float_to_int! { f64, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<usize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
368 | float_to_int! { f64, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<usize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
368 | float_to_int! { f64, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
368 | float_to_int! { f64, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
368 | float_to_int! { f64, u64, i64 => usize }
    | ---------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
800 | impl_as_primitive!(i16 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
370 | float_to_int! { Round<f32>, u32, i32 => i8 i16 i32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
371 | float_to_int! { Round<f32>, u64, i64 => i64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
371 | float_to_int! { Round<f32>, u64, i64 => i64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
371 | float_to_int! { Round<f32>, u64, i64 => i64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
371 | float_to_int! { Round<f32>, u64, i64 => i64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
371 | float_to_int! { Round<f32>, u64, i64 => i64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
371 | float_to_int! { Round<f32>, u64, i64 => i64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
371 | float_to_int! { Round<f32>, u64, i64 => i64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
371 | float_to_int! { Round<f32>, u64, i64 => i64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
801 | impl_as_primitive!(u32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
372 | float_to_int! { Round<f32>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
372 | float_to_int! { Round<f32>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
372 | float_to_int! { Round<f32>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
372 | float_to_int! { Round<f32>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
372 | float_to_int! { Round<f32>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
372 | float_to_int! { Round<f32>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
372 | float_to_int! { Round<f32>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
372 | float_to_int! { Round<f32>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
376 | float_to_int! { Round<f32>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
376 | float_to_int! { Round<f32>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
376 | float_to_int! { Round<f32>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
376 | float_to_int! { Round<f32>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<isize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
376 | float_to_int! { Round<f32>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<isize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
376 | float_to_int! { Round<f32>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
376 | float_to_int! { Round<f32>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
376 | float_to_int! { Round<f32>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
802 | impl_as_primitive!(i32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_to_int! { Round<f32>, u32, i32 => u8 u16 u32 }
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
378 | float_to_int! { Round<f32>, u64, i64 => u64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
378 | float_to_int! { Round<f32>, u64, i64 => u64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
378 | float_to_int! { Round<f32>, u64, i64 => u64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
803 | impl_as_primitive!(u64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
378 | float_to_int! { Round<f32>, u64, i64 => u64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
378 | float_to_int! { Round<f32>, u64, i64 => u64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
378 | float_to_int! { Round<f32>, u64, i64 => u64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
378 | float_to_int! { Round<f32>, u64, i64 => u64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
378 | float_to_int! { Round<f32>, u64, i64 => u64 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | float_to_int! { Round<f32>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | float_to_int! { Round<f32>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | float_to_int! { Round<f32>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | float_to_int! { Round<f32>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | float_to_int! { Round<f32>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | float_to_int! { Round<f32>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | float_to_int! { Round<f32>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
379 | float_to_int! { Round<f32>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | float_to_int! { Round<f32>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | float_to_int! { Round<f32>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | float_to_int! { Round<f32>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | float_to_int! { Round<f32>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<usize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | float_to_int! { Round<f32>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<usize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | float_to_int! { Round<f32>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | float_to_int! { Round<f32>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
383 | float_to_int! { Round<f32>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
804 | impl_as_primitive!(i64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
809 | impl_as_primitive!(usize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
385 | float_to_int! { Round<f64>, u64, i64 => i8 i16 i32 i64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | float_to_int! { Round<f64>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | float_to_int! { Round<f64>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | float_to_int! { Round<f64>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | float_to_int! { Round<f64>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | float_to_int! { Round<f64>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | float_to_int! { Round<f64>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | float_to_int! { Round<f64>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
386 | float_to_int! { Round<f64>, u128, i128 => i128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | float_to_int! { Round<f64>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | float_to_int! { Round<f64>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | float_to_int! { Round<f64>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
810 | impl_as_primitive!(isize => { f32, f64 });
    | ----------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | float_to_int! { Round<f64>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<isize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | float_to_int! { Round<f64>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<isize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | float_to_int! { Round<f64>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | float_to_int! { Round<f64>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
387 | float_to_int! { Round<f64>, u64, i64 => isize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
811 | impl_as_primitive!(f32 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
388 | float_to_int! { Round<f64>, u64, i64 => u8 u16 u32 u64 }
    | -------------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | float_to_int! { Round<f64>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | float_to_int! { Round<f64>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | float_to_int! { Round<f64>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | float_to_int! { Round<f64>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | float_to_int! { Round<f64>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | float_to_int! { Round<f64>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | float_to_int! { Round<f64>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
389 | float_to_int! { Round<f64>, u128, i128 => u128 }
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
812 | impl_as_primitive!(f64 => { f32, f64 });
    | --------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:210:38
    |
210 |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | float_to_int! { Round<f64>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `char` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `char`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:307:14
    |
307 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | float_to_int! { Round<f64>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:310:30
    |
310 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | float_to_int! { Round<f64>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:315:14
    |
315 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | float_to_int! { Round<f64>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<usize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | float_to_int! { Round<f64>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<usize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:316:38
    |
316 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | float_to_int! { Round<f64>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:339:14
    |
339 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | float_to_int! { Round<f64>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:341:40
    |
341 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
390 | float_to_int! { Round<f64>, u64, i64 => usize }
    | ----------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `float_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
813 | impl_as_primitive!(char => { char });
    | ------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `bool` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `bool`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:770:37
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |                                     ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:781:14
    |
781 |         impl AsPrimitive<$U> for $T {
    |              ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
814 | impl_as_primitive!(bool => {});
    | ------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `AsPrimitive`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:772:18
    |
770 | pub trait AsPrimitive<T>: 'static + Copy
    |           ----------- required by a bound in this
771 | where
772 |     T: 'static + Copy,
    |                  ^^^^ required by this bound in `AsPrimitive`
    = note: this error originates in the macro `impl_as_primitive` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
46 | zero_impl!(usize, 0);
   | -------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
47 | zero_impl!(u8, 0);
   | ----------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
48 | zero_impl!(u16, 0);
   | ------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
49 | zero_impl!(u32, 0);
   | ------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
50 | zero_impl!(u64, 0);
   | ------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
54 | zero_impl!(isize, 0);
   | -------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
55 | zero_impl!(i8, 0);
   | ----------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
56 | zero_impl!(i16, 0);
   | ------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
57 | zero_impl!(i32, 0);
   | ------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
58 | zero_impl!(i64, 0);
   | ------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
62 | zero_impl!(f32, 0.0);
   | -------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:33:14
   |
33 |         impl Zero for $t {
   |              ^^^^ doesn't have a size known at compile-time
...
63 | zero_impl!(f64, 0.0);
   | -------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `identities::Zero`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:12:17
   |
12 | pub trait Zero: Sized + Add<Self, Output = Self> {
   |                 ^^^^^ required by this bound in `identities::Zero`
   = note: this error originates in the macro `zero_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
135 | one_impl!(usize, 1);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
136 | one_impl!(u8, 1);
    | ---------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
137 | one_impl!(u16, 1);
    | ----------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
138 | one_impl!(u32, 1);
    | ----------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
139 | one_impl!(u64, 1);
    | ----------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
143 | one_impl!(isize, 1);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
144 | one_impl!(i8, 1);
    | ---------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
145 | one_impl!(i16, 1);
    | ----------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
146 | one_impl!(i32, 1);
    | ----------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
147 | one_impl!(i64, 1);
    | ----------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
151 | one_impl!(f32, 1.0);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:122:14
    |
122 |         impl One for $t {
    |              ^^^ doesn't have a size known at compile-time
...
152 | one_impl!(f64, 1.0);
    | ------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `One`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/identities.rs:90:16
    |
90  | pub trait One: Sized + Mul<Self, Output = Self> {
    |                ^^^^^ required by this bound in `One`
    = note: this error originates in the macro `one_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
396 | prim_int_impl!(u8, i8, u8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
397 | prim_int_impl!(u16, i16, u16);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
398 | prim_int_impl!(u32, i32, u32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
399 | prim_int_impl!(u64, i64, u64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
402 | prim_int_impl!(usize, isize, usize);
    | ----------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
403 | prim_int_impl!(i8, i8, u8);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
404 | prim_int_impl!(i16, i16, u16);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
405 | prim_int_impl!(i32, i32, u32);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
406 | prim_int_impl!(i64, i64, u64);
    | ----------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:311:14
    |
311 |         impl PrimInt for $T {
    |              ^^^^^^^ doesn't have a size known at compile-time
...
409 | prim_int_impl!(isize, isize, usize);
    | ----------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `PrimInt`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/int.rs:35:5
    |
34  | pub trait PrimInt:
    |           ------- required by a bound in this
35  |     Sized
    |     ^^^^^ required by this bound in `PrimInt`
    = note: this error originates in the macro `prim_int_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
22 | checked_impl!(CheckedAdd, checked_add, u8);
   | ------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
22  | checked_impl!(CheckedAdd, checked_add, u8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
23 | checked_impl!(CheckedAdd, checked_add, u16);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
23  | checked_impl!(CheckedAdd, checked_add, u16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
24 | checked_impl!(CheckedAdd, checked_add, u32);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
24  | checked_impl!(CheckedAdd, checked_add, u32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
25 | checked_impl!(CheckedAdd, checked_add, u64);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
25  | checked_impl!(CheckedAdd, checked_add, u64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
26 | checked_impl!(CheckedAdd, checked_add, usize);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
26  | checked_impl!(CheckedAdd, checked_add, usize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
30 | checked_impl!(CheckedAdd, checked_add, i8);
   | ------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
30  | checked_impl!(CheckedAdd, checked_add, i8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
31 | checked_impl!(CheckedAdd, checked_add, i16);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
31  | checked_impl!(CheckedAdd, checked_add, i16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
32 | checked_impl!(CheckedAdd, checked_add, i32);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
32  | checked_impl!(CheckedAdd, checked_add, i32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
33 | checked_impl!(CheckedAdd, checked_add, i64);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
33  | checked_impl!(CheckedAdd, checked_add, i64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
34 | checked_impl!(CheckedAdd, checked_add, isize);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `checked::CheckedAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:5:23
   |
5  | pub trait CheckedAdd: Sized + Add<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedAdd`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
34  | checked_impl!(CheckedAdd, checked_add, isize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
45 | checked_impl!(CheckedSub, checked_sub, u8);
   | ------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
45  | checked_impl!(CheckedSub, checked_sub, u8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
46 | checked_impl!(CheckedSub, checked_sub, u16);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
46  | checked_impl!(CheckedSub, checked_sub, u16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
47 | checked_impl!(CheckedSub, checked_sub, u32);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
47  | checked_impl!(CheckedSub, checked_sub, u32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
48 | checked_impl!(CheckedSub, checked_sub, u64);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
48  | checked_impl!(CheckedSub, checked_sub, u64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
49 | checked_impl!(CheckedSub, checked_sub, usize);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
49  | checked_impl!(CheckedSub, checked_sub, usize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
53 | checked_impl!(CheckedSub, checked_sub, i8);
   | ------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
53  | checked_impl!(CheckedSub, checked_sub, i8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
54 | checked_impl!(CheckedSub, checked_sub, i16);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
54  | checked_impl!(CheckedSub, checked_sub, i16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
55 | checked_impl!(CheckedSub, checked_sub, i32);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
55  | checked_impl!(CheckedSub, checked_sub, i32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
56 | checked_impl!(CheckedSub, checked_sub, i64);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
56  | checked_impl!(CheckedSub, checked_sub, i64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
57 | checked_impl!(CheckedSub, checked_sub, isize);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `checked::CheckedSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:39:23
   |
39 | pub trait CheckedSub: Sized + Sub<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedSub`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
57  | checked_impl!(CheckedSub, checked_sub, isize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
69 | checked_impl!(CheckedMul, checked_mul, u8);
   | ------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
69  | checked_impl!(CheckedMul, checked_mul, u8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
70 | checked_impl!(CheckedMul, checked_mul, u16);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
70  | checked_impl!(CheckedMul, checked_mul, u16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
71 | checked_impl!(CheckedMul, checked_mul, u32);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
71  | checked_impl!(CheckedMul, checked_mul, u32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
72 | checked_impl!(CheckedMul, checked_mul, u64);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
72  | checked_impl!(CheckedMul, checked_mul, u64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
73 | checked_impl!(CheckedMul, checked_mul, usize);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
73  | checked_impl!(CheckedMul, checked_mul, usize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
77 | checked_impl!(CheckedMul, checked_mul, i8);
   | ------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
77  | checked_impl!(CheckedMul, checked_mul, i8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
78 | checked_impl!(CheckedMul, checked_mul, i16);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
78  | checked_impl!(CheckedMul, checked_mul, i16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
79 | checked_impl!(CheckedMul, checked_mul, i32);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
79  | checked_impl!(CheckedMul, checked_mul, i32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
80 | checked_impl!(CheckedMul, checked_mul, i64);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
80  | checked_impl!(CheckedMul, checked_mul, i64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
81 | checked_impl!(CheckedMul, checked_mul, isize);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `checked::CheckedMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:63:23
   |
63 | pub trait CheckedMul: Sized + Mul<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedMul`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
81  | checked_impl!(CheckedMul, checked_mul, isize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
93 | checked_impl!(CheckedDiv, checked_div, u8);
   | ------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `checked::CheckedDiv`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
   |
87 | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedDiv`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
93  | checked_impl!(CheckedDiv, checked_div, u8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
94 | checked_impl!(CheckedDiv, checked_div, u16);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `checked::CheckedDiv`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
   |
87 | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedDiv`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
94  | checked_impl!(CheckedDiv, checked_div, u16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
95 | checked_impl!(CheckedDiv, checked_div, u32);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `checked::CheckedDiv`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
   |
87 | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedDiv`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
95  | checked_impl!(CheckedDiv, checked_div, u32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
96 | checked_impl!(CheckedDiv, checked_div, u64);
   | ------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `checked::CheckedDiv`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
   |
87 | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedDiv`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
96  | checked_impl!(CheckedDiv, checked_div, u64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
   |
13 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
97 | checked_impl!(CheckedDiv, checked_div, usize);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `checked::CheckedDiv`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
   |
87 | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
   |                       ^^^^^ required by this bound in `checked::CheckedDiv`
   = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
97  | checked_impl!(CheckedDiv, checked_div, usize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
101 | checked_impl!(CheckedDiv, checked_div, i8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `checked::CheckedDiv`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
    |
87  | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `checked::CheckedDiv`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
101 | checked_impl!(CheckedDiv, checked_div, i8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
102 | checked_impl!(CheckedDiv, checked_div, i16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `checked::CheckedDiv`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
    |
87  | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `checked::CheckedDiv`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
102 | checked_impl!(CheckedDiv, checked_div, i16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
103 | checked_impl!(CheckedDiv, checked_div, i32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `checked::CheckedDiv`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
    |
87  | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `checked::CheckedDiv`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
103 | checked_impl!(CheckedDiv, checked_div, i32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
104 | checked_impl!(CheckedDiv, checked_div, i64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `checked::CheckedDiv`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
    |
87  | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `checked::CheckedDiv`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
104 | checked_impl!(CheckedDiv, checked_div, i64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
105 | checked_impl!(CheckedDiv, checked_div, isize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `checked::CheckedDiv`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:87:23
    |
87  | pub trait CheckedDiv: Sized + Div<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `checked::CheckedDiv`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
105 | checked_impl!(CheckedDiv, checked_div, isize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
134 | checked_impl!(CheckedRem, checked_rem, u8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
134 | checked_impl!(CheckedRem, checked_rem, u8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
135 | checked_impl!(CheckedRem, checked_rem, u16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
135 | checked_impl!(CheckedRem, checked_rem, u16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
136 | checked_impl!(CheckedRem, checked_rem, u32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
136 | checked_impl!(CheckedRem, checked_rem, u32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
137 | checked_impl!(CheckedRem, checked_rem, u64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
137 | checked_impl!(CheckedRem, checked_rem, u64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
138 | checked_impl!(CheckedRem, checked_rem, usize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
138 | checked_impl!(CheckedRem, checked_rem, usize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
142 | checked_impl!(CheckedRem, checked_rem, i8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
142 | checked_impl!(CheckedRem, checked_rem, i8);
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
143 | checked_impl!(CheckedRem, checked_rem, i16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
143 | checked_impl!(CheckedRem, checked_rem, i16);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
144 | checked_impl!(CheckedRem, checked_rem, i32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
144 | checked_impl!(CheckedRem, checked_rem, i32);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
145 | checked_impl!(CheckedRem, checked_rem, i64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
145 | checked_impl!(CheckedRem, checked_rem, i64);
    | ------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:13:14
    |
13  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
146 | checked_impl!(CheckedRem, checked_rem, isize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `CheckedRem`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:111:23
    |
111 | pub trait CheckedRem: Sized + Rem<Self, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedRem`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:15:42
    |
15  |             fn $method(&self, v: &$t) -> Option<$t> {
    |                                          ^^^^^^^^^^ doesn't have a size known at compile-time
...
146 | checked_impl!(CheckedRem, checked_rem, isize);
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
182 | checked_impl_unary!(CheckedNeg, checked_neg, u8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
182 | checked_impl_unary!(CheckedNeg, checked_neg, u8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
183 | checked_impl_unary!(CheckedNeg, checked_neg, u16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
183 | checked_impl_unary!(CheckedNeg, checked_neg, u16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
184 | checked_impl_unary!(CheckedNeg, checked_neg, u32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
184 | checked_impl_unary!(CheckedNeg, checked_neg, u32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
185 | checked_impl_unary!(CheckedNeg, checked_neg, u64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
185 | checked_impl_unary!(CheckedNeg, checked_neg, u64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
186 | checked_impl_unary!(CheckedNeg, checked_neg, usize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
186 | checked_impl_unary!(CheckedNeg, checked_neg, usize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
190 | checked_impl_unary!(CheckedNeg, checked_neg, i8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
190 | checked_impl_unary!(CheckedNeg, checked_neg, i8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
191 | checked_impl_unary!(CheckedNeg, checked_neg, i16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
191 | checked_impl_unary!(CheckedNeg, checked_neg, i16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
192 | checked_impl_unary!(CheckedNeg, checked_neg, i32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
192 | checked_impl_unary!(CheckedNeg, checked_neg, i32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
193 | checked_impl_unary!(CheckedNeg, checked_neg, i64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
193 | checked_impl_unary!(CheckedNeg, checked_neg, i64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:152:14
    |
152 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
194 | checked_impl_unary!(CheckedNeg, checked_neg, isize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `CheckedNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:162:23
    |
162 | pub trait CheckedNeg: Sized {
    |                       ^^^^^ required by this bound in `CheckedNeg`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:154:34
    |
154 |             fn $method(&self) -> Option<$t> {
    |                                  ^^^^^^^^^^ doesn't have a size known at compile-time
...
194 | checked_impl_unary!(CheckedNeg, checked_neg, isize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_impl_unary` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
228 | checked_shift_impl!(CheckedShl, checked_shl, u8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
228 | checked_shift_impl!(CheckedShl, checked_shl, u8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
229 | checked_shift_impl!(CheckedShl, checked_shl, u16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
229 | checked_shift_impl!(CheckedShl, checked_shl, u16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
230 | checked_shift_impl!(CheckedShl, checked_shl, u32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
230 | checked_shift_impl!(CheckedShl, checked_shl, u32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
231 | checked_shift_impl!(CheckedShl, checked_shl, u64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
231 | checked_shift_impl!(CheckedShl, checked_shl, u64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
232 | checked_shift_impl!(CheckedShl, checked_shl, usize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
232 | checked_shift_impl!(CheckedShl, checked_shl, usize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
236 | checked_shift_impl!(CheckedShl, checked_shl, i8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
236 | checked_shift_impl!(CheckedShl, checked_shl, i8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
237 | checked_shift_impl!(CheckedShl, checked_shl, i16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
237 | checked_shift_impl!(CheckedShl, checked_shl, i16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
238 | checked_shift_impl!(CheckedShl, checked_shl, i32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
238 | checked_shift_impl!(CheckedShl, checked_shl, i32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
239 | checked_shift_impl!(CheckedShl, checked_shl, i64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
239 | checked_shift_impl!(CheckedShl, checked_shl, i64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
240 | checked_shift_impl!(CheckedShl, checked_shl, isize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `CheckedShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:200:23
    |
200 | pub trait CheckedShl: Sized + Shl<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShl`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
240 | checked_shift_impl!(CheckedShl, checked_shl, isize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
263 | checked_shift_impl!(CheckedShr, checked_shr, u8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
263 | checked_shift_impl!(CheckedShr, checked_shr, u8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
264 | checked_shift_impl!(CheckedShr, checked_shr, u16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
264 | checked_shift_impl!(CheckedShr, checked_shr, u16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
265 | checked_shift_impl!(CheckedShr, checked_shr, u32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
265 | checked_shift_impl!(CheckedShr, checked_shr, u32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
266 | checked_shift_impl!(CheckedShr, checked_shr, u64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
266 | checked_shift_impl!(CheckedShr, checked_shr, u64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
267 | checked_shift_impl!(CheckedShr, checked_shr, usize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
267 | checked_shift_impl!(CheckedShr, checked_shr, usize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
271 | checked_shift_impl!(CheckedShr, checked_shr, i8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
271 | checked_shift_impl!(CheckedShr, checked_shr, i8);
    | ------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
272 | checked_shift_impl!(CheckedShr, checked_shr, i16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
272 | checked_shift_impl!(CheckedShr, checked_shr, i16);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
273 | checked_shift_impl!(CheckedShr, checked_shr, i32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
273 | checked_shift_impl!(CheckedShr, checked_shr, i32);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
274 | checked_shift_impl!(CheckedShr, checked_shr, i64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
274 | checked_shift_impl!(CheckedShr, checked_shr, i64);
    | ------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:219:14
    |
219 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
275 | checked_shift_impl!(CheckedShr, checked_shr, isize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `CheckedShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:246:23
    |
246 | pub trait CheckedShr: Sized + Shr<u32, Output = Self> {
    |                       ^^^^^ required by this bound in `CheckedShr`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/checked.rs:221:44
    |
221 |             fn $method(&self, rhs: u32) -> Option<$t> {
    |                                            ^^^^^^^^^^ doesn't have a size known at compile-time
...
275 | checked_shift_impl!(CheckedShr, checked_shr, isize);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `checked_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
25 | overflowing_impl!(OverflowingAdd, overflowing_add, u8);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
26 | overflowing_impl!(OverflowingAdd, overflowing_add, u16);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
27 | overflowing_impl!(OverflowingAdd, overflowing_add, u32);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
28 | overflowing_impl!(OverflowingAdd, overflowing_add, u64);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
29 | overflowing_impl!(OverflowingAdd, overflowing_add, usize);
   | --------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
33 | overflowing_impl!(OverflowingAdd, overflowing_add, i8);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
34 | overflowing_impl!(OverflowingAdd, overflowing_add, i16);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
35 | overflowing_impl!(OverflowingAdd, overflowing_add, i32);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
36 | overflowing_impl!(OverflowingAdd, overflowing_add, i64);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
37 | overflowing_impl!(OverflowingAdd, overflowing_add, isize);
   | --------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `OverflowingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:19:27
   |
19 | pub trait OverflowingAdd: Sized + Add<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingAdd`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
48 | overflowing_impl!(OverflowingSub, overflowing_sub, u8);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
49 | overflowing_impl!(OverflowingSub, overflowing_sub, u16);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
50 | overflowing_impl!(OverflowingSub, overflowing_sub, u32);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
51 | overflowing_impl!(OverflowingSub, overflowing_sub, u64);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
52 | overflowing_impl!(OverflowingSub, overflowing_sub, usize);
   | --------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
56 | overflowing_impl!(OverflowingSub, overflowing_sub, i8);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
57 | overflowing_impl!(OverflowingSub, overflowing_sub, i16);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
58 | overflowing_impl!(OverflowingSub, overflowing_sub, i32);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
59 | overflowing_impl!(OverflowingSub, overflowing_sub, i64);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
60 | overflowing_impl!(OverflowingSub, overflowing_sub, isize);
   | --------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `OverflowingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:42:27
   |
42 | pub trait OverflowingSub: Sized + Sub<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingSub`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
71 | overflowing_impl!(OverflowingMul, overflowing_mul, u8);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
72 | overflowing_impl!(OverflowingMul, overflowing_mul, u16);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
73 | overflowing_impl!(OverflowingMul, overflowing_mul, u32);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
74 | overflowing_impl!(OverflowingMul, overflowing_mul, u64);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
75 | overflowing_impl!(OverflowingMul, overflowing_mul, usize);
   | --------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
79 | overflowing_impl!(OverflowingMul, overflowing_mul, i8);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
80 | overflowing_impl!(OverflowingMul, overflowing_mul, i16);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
81 | overflowing_impl!(OverflowingMul, overflowing_mul, i32);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
82 | overflowing_impl!(OverflowingMul, overflowing_mul, i64);
   | ------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:9:14
   |
9  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
83 | overflowing_impl!(OverflowingMul, overflowing_mul, isize);
   | --------------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `OverflowingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/overflowing.rs:65:27
   |
65 | pub trait OverflowingMul: Sized + Mul<Self, Output = Self> {
   |                           ^^^^^ required by this bound in `OverflowingMul`
   = note: this error originates in the macro `overflowing_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
53 | saturating_impl!(SaturatingAdd, saturating_add, u8);
   | --------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
54 | saturating_impl!(SaturatingAdd, saturating_add, u16);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
55 | saturating_impl!(SaturatingAdd, saturating_add, u32);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
56 | saturating_impl!(SaturatingAdd, saturating_add, u64);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
57 | saturating_impl!(SaturatingAdd, saturating_add, usize);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
61 | saturating_impl!(SaturatingAdd, saturating_add, i8);
   | --------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
62 | saturating_impl!(SaturatingAdd, saturating_add, i16);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
63 | saturating_impl!(SaturatingAdd, saturating_add, i32);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
64 | saturating_impl!(SaturatingAdd, saturating_add, i64);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
65 | saturating_impl!(SaturatingAdd, saturating_add, isize);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `SaturatingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:47:26
   |
47 | pub trait SaturatingAdd: Sized + Add<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingAdd`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
76 | saturating_impl!(SaturatingSub, saturating_sub, u8);
   | --------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
77 | saturating_impl!(SaturatingSub, saturating_sub, u16);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
78 | saturating_impl!(SaturatingSub, saturating_sub, u32);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
79 | saturating_impl!(SaturatingSub, saturating_sub, u64);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
80 | saturating_impl!(SaturatingSub, saturating_sub, usize);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
84 | saturating_impl!(SaturatingSub, saturating_sub, i8);
   | --------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
85 | saturating_impl!(SaturatingSub, saturating_sub, i16);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
86 | saturating_impl!(SaturatingSub, saturating_sub, i32);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
87 | saturating_impl!(SaturatingSub, saturating_sub, i64);
   | ---------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
88 | saturating_impl!(SaturatingSub, saturating_sub, isize);
   | ------------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `SaturatingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:70:26
   |
70 | pub trait SaturatingSub: Sized + Sub<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingSub`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
   |
37 |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
99 | saturating_impl!(SaturatingMul, saturating_mul, u8);
   | --------------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `SaturatingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
   |
93 | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
   |                          ^^^^^ required by this bound in `SaturatingMul`
   = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
100 | saturating_impl!(SaturatingMul, saturating_mul, u16);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
101 | saturating_impl!(SaturatingMul, saturating_mul, u32);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
102 | saturating_impl!(SaturatingMul, saturating_mul, u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
103 | saturating_impl!(SaturatingMul, saturating_mul, usize);
    | ------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
107 | saturating_impl!(SaturatingMul, saturating_mul, i8);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
108 | saturating_impl!(SaturatingMul, saturating_mul, i16);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
109 | saturating_impl!(SaturatingMul, saturating_mul, i32);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
110 | saturating_impl!(SaturatingMul, saturating_mul, i64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:37:14
    |
37  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
111 | saturating_impl!(SaturatingMul, saturating_mul, isize);
    | ------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `SaturatingMul`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/saturating.rs:93:26
    |
93  | pub trait SaturatingMul: Sized + Mul<Self, Output = Self> {
    |                          ^^^^^ required by this bound in `SaturatingMul`
    = note: this error originates in the macro `saturating_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
30 | wrapping_impl!(WrappingAdd, wrapping_add, u8);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
31 | wrapping_impl!(WrappingAdd, wrapping_add, u16);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
32 | wrapping_impl!(WrappingAdd, wrapping_add, u32);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
33 | wrapping_impl!(WrappingAdd, wrapping_add, u64);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
34 | wrapping_impl!(WrappingAdd, wrapping_add, usize);
   | ------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
38 | wrapping_impl!(WrappingAdd, wrapping_add, i8);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
39 | wrapping_impl!(WrappingAdd, wrapping_add, i16);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
40 | wrapping_impl!(WrappingAdd, wrapping_add, i32);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
41 | wrapping_impl!(WrappingAdd, wrapping_add, i64);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<i128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<i128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
42 | wrapping_impl!(WrappingAdd, wrapping_add, isize);
   | ------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `WrappingAdd`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:24:24
   |
24 | pub trait WrappingAdd: Sized + Add<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingAdd`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
53 | wrapping_impl!(WrappingSub, wrapping_sub, u8);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
54 | wrapping_impl!(WrappingSub, wrapping_sub, u16);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
55 | wrapping_impl!(WrappingSub, wrapping_sub, u32);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
56 | wrapping_impl!(WrappingSub, wrapping_sub, u64);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
57 | wrapping_impl!(WrappingSub, wrapping_sub, usize);
   | ------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
61 | wrapping_impl!(WrappingSub, wrapping_sub, i8);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
62 | wrapping_impl!(WrappingSub, wrapping_sub, i16);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
63 | wrapping_impl!(WrappingSub, wrapping_sub, i32);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
64 | wrapping_impl!(WrappingSub, wrapping_sub, i64);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
65 | wrapping_impl!(WrappingSub, wrapping_sub, isize);
   | ------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `WrappingSub`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:47:24
   |
47 | pub trait WrappingSub: Sized + Sub<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingSub`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
76 | wrapping_impl!(WrappingMul, wrapping_mul, u8);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
77 | wrapping_impl!(WrappingMul, wrapping_mul, u16);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
78 | wrapping_impl!(WrappingMul, wrapping_mul, u32);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
79 | wrapping_impl!(WrappingMul, wrapping_mul, u64);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
80 | wrapping_impl!(WrappingMul, wrapping_mul, usize);
   | ------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
84 | wrapping_impl!(WrappingMul, wrapping_mul, i8);
   | --------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
85 | wrapping_impl!(WrappingMul, wrapping_mul, i16);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
86 | wrapping_impl!(WrappingMul, wrapping_mul, i32);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
87 | wrapping_impl!(WrappingMul, wrapping_mul, i64);
   | ---------------------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:6:14
   |
6  |         impl $trait_name for $t {
   |              ^ doesn't have a size known at compile-time
...
88 | wrapping_impl!(WrappingMul, wrapping_mul, isize);
   | ------------------------------------------------ in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `WrappingMul`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:70:24
   |
70 | pub trait WrappingMul: Sized + Mul<Self, Output = Self> {
   |                        ^^^^^ required by this bound in `WrappingMul`
   = note: this error originates in the macro `wrapping_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
125 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, u8);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
126 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, u16);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
127 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, u32);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
128 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
129 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, usize);
    | ------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
132 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, i8);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
133 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, i16);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
134 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, i32);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
135 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, i64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:94:14
    |
94  |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
136 | wrapping_unary_impl!(WrappingNeg, wrapping_neg, isize);
    | ------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `WrappingNeg`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:104:24
    |
104 | pub trait WrappingNeg: Sized {
    |                        ^^^^^ required by this bound in `WrappingNeg`
    = note: this error originates in the macro `wrapping_unary_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
170 | wrapping_shift_impl!(WrappingShl, wrapping_shl, u8);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
171 | wrapping_shift_impl!(WrappingShl, wrapping_shl, u16);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | wrapping_shift_impl!(WrappingShl, wrapping_shl, u32);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
173 | wrapping_shift_impl!(WrappingShl, wrapping_shl, u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
174 | wrapping_shift_impl!(WrappingShl, wrapping_shl, usize);
    | ------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
178 | wrapping_shift_impl!(WrappingShl, wrapping_shl, i8);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
179 | wrapping_shift_impl!(WrappingShl, wrapping_shl, i16);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
180 | wrapping_shift_impl!(WrappingShl, wrapping_shl, i32);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
181 | wrapping_shift_impl!(WrappingShl, wrapping_shl, i64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
182 | wrapping_shift_impl!(WrappingShl, wrapping_shl, isize);
    | ------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `WrappingShl`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:152:24
    |
152 | pub trait WrappingShl: Sized + Shl<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShl`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
205 | wrapping_shift_impl!(WrappingShr, wrapping_shr, u8);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
206 | wrapping_shift_impl!(WrappingShr, wrapping_shr, u16);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
207 | wrapping_shift_impl!(WrappingShr, wrapping_shr, u32);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
208 | wrapping_shift_impl!(WrappingShr, wrapping_shr, u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
209 | wrapping_shift_impl!(WrappingShr, wrapping_shr, usize);
    | ------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
213 | wrapping_shift_impl!(WrappingShr, wrapping_shr, i8);
    | --------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
214 | wrapping_shift_impl!(WrappingShr, wrapping_shr, i16);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
215 | wrapping_shift_impl!(WrappingShr, wrapping_shr, i32);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
216 | wrapping_shift_impl!(WrappingShr, wrapping_shr, i64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:142:14
    |
142 |         impl $trait_name for $t {
    |              ^ doesn't have a size known at compile-time
...
217 | wrapping_shift_impl!(WrappingShr, wrapping_shr, isize);
    | ------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `WrappingShr`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/ops/wrapping.rs:187:24
    |
187 | pub trait WrappingShr: Sized + Shr<usize, Output = Self> {
    |                        ^^^^^ required by this bound in `WrappingShr`
    = note: this error originates in the macro `wrapping_shift_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<isize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<isize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
414 | signed! { i8, i16, i32, i64, i128, isize }
    | ------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:128:11
    |
128 | pow_impl!(Wrapping<u8>);
    |           ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
128 | pow_impl!(Wrapping<u8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
128 | pow_impl!(Wrapping<u8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
128 | pow_impl!(Wrapping<u8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
128 | pow_impl!(Wrapping<u8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
128 | pow_impl!(Wrapping<u8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
128 | pow_impl!(Wrapping<u8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:129:11
    |
129 | pow_impl!(Wrapping<i8>);
    |           ^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
129 | pow_impl!(Wrapping<i8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
129 | pow_impl!(Wrapping<i8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
129 | pow_impl!(Wrapping<i8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
129 | pow_impl!(Wrapping<i8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
129 | pow_impl!(Wrapping<i8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
129 | pow_impl!(Wrapping<i8>);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:130:11
    |
130 | pow_impl!(Wrapping<u16>);
    |           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
130 | pow_impl!(Wrapping<u16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
130 | pow_impl!(Wrapping<u16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
130 | pow_impl!(Wrapping<u16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
130 | pow_impl!(Wrapping<u16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
130 | pow_impl!(Wrapping<u16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
130 | pow_impl!(Wrapping<u16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:131:11
    |
131 | pow_impl!(Wrapping<i16>);
    |           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
131 | pow_impl!(Wrapping<i16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
131 | pow_impl!(Wrapping<i16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u8>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u8>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
131 | pow_impl!(Wrapping<i16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
131 | pow_impl!(Wrapping<i16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
131 | pow_impl!(Wrapping<i16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
131 | pow_impl!(Wrapping<i16>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:132:11
    |
132 | pow_impl!(Wrapping<u32>);
    |           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
132 | pow_impl!(Wrapping<u32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
132 | pow_impl!(Wrapping<u32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
132 | pow_impl!(Wrapping<u32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
132 | pow_impl!(Wrapping<u32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
132 | pow_impl!(Wrapping<u32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
132 | pow_impl!(Wrapping<u32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:133:11
    |
133 | pow_impl!(Wrapping<i32>);
    |           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
133 | pow_impl!(Wrapping<i32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
133 | pow_impl!(Wrapping<i32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
133 | pow_impl!(Wrapping<i32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
133 | pow_impl!(Wrapping<i32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
133 | pow_impl!(Wrapping<i32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
133 | pow_impl!(Wrapping<i32>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:134:11
    |
134 | pow_impl!(Wrapping<u64>);
    |           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
134 | pow_impl!(Wrapping<u64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
134 | pow_impl!(Wrapping<u64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
134 | pow_impl!(Wrapping<u64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
134 | pow_impl!(Wrapping<u64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
134 | pow_impl!(Wrapping<u64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
134 | pow_impl!(Wrapping<u64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u16>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u16>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:135:11
    |
135 | pow_impl!(Wrapping<i64>);
    |           ^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
135 | pow_impl!(Wrapping<i64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
135 | pow_impl!(Wrapping<i64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
135 | pow_impl!(Wrapping<i64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
135 | pow_impl!(Wrapping<i64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
135 | pow_impl!(Wrapping<i64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
135 | pow_impl!(Wrapping<i64>);
    | ------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:140:11
    |
140 | pow_impl!(Wrapping<usize>);
    |           ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
140 | pow_impl!(Wrapping<usize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
140 | pow_impl!(Wrapping<usize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
140 | pow_impl!(Wrapping<usize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
140 | pow_impl!(Wrapping<usize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
140 | pow_impl!(Wrapping<usize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
140 | pow_impl!(Wrapping<usize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:141:11
    |
141 | pow_impl!(Wrapping<isize>);
    |           ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:38:20
    |
38  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
141 | pow_impl!(Wrapping<isize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:46:20
    |
46  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
141 | pow_impl!(Wrapping<isize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:51:32
    |
51  |         impl<'a> Pow<$rhs> for &'a $t {
    |                                ^^^^^^ doesn't have a size known at compile-time
...
141 | pow_impl!(Wrapping<isize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:54:20
    |
54  |             fn pow(self, rhs: $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
141 | pow_impl!(Wrapping<isize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:59:40
    |
59  |         impl<'a, 'b> Pow<&'a $rhs> for &'b $t {
    |                                        ^^^^^^ doesn't have a size known at compile-time
...
141 | pow_impl!(Wrapping<isize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/pow.rs:62:20
    |
62  |             fn pow(self, rhs: &'a $rhs) -> $t {
    |                    ^^^^ doesn't have a size known at compile-time
...
141 | pow_impl!(Wrapping<isize>);
    | -------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `pow_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:46:14
   |
46 |         impl Signed for $t {
   |              ^^^^^^ doesn't have a size known at compile-time
...
75 | signed_impl!(isize i8 i16 i32 i64);
   | ---------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Signed`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:8:19
   |
8  | pub trait Signed: Sized + Num + Neg<Output = Self> {
   |                   ^^^^^ required by this bound in `Signed`
   = note: this error originates in the macro `signed_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:46:14
   |
46 |         impl Signed for $t {
   |              ^^^^^^ doesn't have a size known at compile-time
...
75 | signed_impl!(isize i8 i16 i32 i64);
   | ---------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Signed`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:8:19
   |
8  | pub trait Signed: Sized + Num + Neg<Output = Self> {
   |                   ^^^^^ required by this bound in `Signed`
   = note: this error originates in the macro `signed_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:46:14
   |
46 |         impl Signed for $t {
   |              ^^^^^^ doesn't have a size known at compile-time
...
75 | signed_impl!(isize i8 i16 i32 i64);
   | ---------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Signed`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:8:19
   |
8  | pub trait Signed: Sized + Num + Neg<Output = Self> {
   |                   ^^^^^ required by this bound in `Signed`
   = note: this error originates in the macro `signed_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u32>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:46:14
   |
46 |         impl Signed for $t {
   |              ^^^^^^ doesn't have a size known at compile-time
...
75 | signed_impl!(isize i8 i16 i32 i64);
   | ---------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Signed`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:8:19
   |
8  | pub trait Signed: Sized + Num + Neg<Output = Self> {
   |                   ^^^^^ required by this bound in `Signed`
   = note: this error originates in the macro `signed_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:46:14
   |
46 |         impl Signed for $t {
   |              ^^^^^^ doesn't have a size known at compile-time
...
75 | signed_impl!(isize i8 i16 i32 i64);
   | ---------------------------------- in this macro invocation
   |
   = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Signed`
  --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:8:19
   |
8  | pub trait Signed: Sized + Num + Neg<Output = Self> {
   |                   ^^^^^ required by this bound in `Signed`
   = note: this error originates in the macro `signed_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:112:14
    |
112 |         impl Signed for $t {
    |              ^^^^^^ doesn't have a size known at compile-time
...
156 | signed_float_impl!(f32);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Signed`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:8:19
    |
8   | pub trait Signed: Sized + Num + Neg<Output = Self> {
    |                   ^^^^^ required by this bound in `Signed`
    = note: this error originates in the macro `signed_float_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:112:14
    |
112 |         impl Signed for $t {
    |              ^^^^^^ doesn't have a size known at compile-time
...
157 | signed_float_impl!(f64);
    | ----------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Signed`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:8:19
    |
8   | pub trait Signed: Sized + Num + Neg<Output = Self> {
    |                   ^^^^^ required by this bound in `Signed`
    = note: this error originates in the macro `signed_float_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:201:14
    |
201 |         impl $name for $t {}
    |              ^ doesn't have a size known at compile-time
...
205 | empty_trait_impl!(Unsigned for usize u8 u16 u32 u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Unsigned`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:197:21
    |
197 | pub trait Unsigned: Num {}
    |                     ^^^ required by this bound in `Unsigned`
    = note: this error originates in the macro `empty_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:201:14
    |
201 |         impl $name for $t {}
    |              ^ doesn't have a size known at compile-time
...
205 | empty_trait_impl!(Unsigned for usize u8 u16 u32 u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Unsigned`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:197:21
    |
197 | pub trait Unsigned: Num {}
    |                     ^^^ required by this bound in `Unsigned`
    = note: this error originates in the macro `empty_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:201:14
    |
201 |         impl $name for $t {}
    |              ^ doesn't have a size known at compile-time
...
205 | empty_trait_impl!(Unsigned for usize u8 u16 u32 u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Unsigned`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:197:21
    |
197 | pub trait Unsigned: Num {}
    |                     ^^^ required by this bound in `Unsigned`
    = note: this error originates in the macro `empty_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:201:14
    |
201 |         impl $name for $t {}
    |              ^ doesn't have a size known at compile-time
...
205 | empty_trait_impl!(Unsigned for usize u8 u16 u32 u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Unsigned`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:197:21
    |
197 | pub trait Unsigned: Num {}
    |                     ^^^ required by this bound in `Unsigned`
    = note: this error originates in the macro `empty_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:201:14
    |
201 |         impl $name for $t {}
    |              ^ doesn't have a size known at compile-time
...
205 | empty_trait_impl!(Unsigned for usize u8 u16 u32 u64);
    | ---------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Unsigned`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/sign.rs:197:21
    |
197 | pub trait Unsigned: Num {}
    |                     ^^^ required by this bound in `Unsigned`
    = note: this error originates in the macro `empty_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `ParseIntError` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `ParseIntError`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u8`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u16`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u32`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `isize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `isize`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i8` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i8`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i16` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i16`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i32`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:161:14
    |
161 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `i64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:165:34
    |
165 |                               -> Result<Self, ::core::num::ParseIntError>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
172 | int_trait_impl!(Num for usize u8 u16 u32 u64 isize i8 i16 i32 i64);
    | ------------------------------------------------------------------ in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `i64`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `int_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:190:10
    |
190 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:190:10
    |
190 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `()` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:197:10
    |
197 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `()`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Error` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:197:10
    |
197 | #[derive(Debug)]
    |          ^^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `Error`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:218:14
    |
218 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
377 | float_trait_impl!(Num for f32 f64);
    | ---------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `float_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:222:34
    |
222 |                               -> Result<Self, Self::FromStrRadixErr>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_trait_impl!(Num for f32 f64);
    | ---------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `float_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `ParseFloatError` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:222:34
    |
222 |                               -> Result<Self, Self::FromStrRadixErr>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_trait_impl!(Num for f32 f64);
    | ---------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `ParseFloatError`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:20
    |
504 | pub enum Result<T, E> {
    |                    ^ required by this bound in `Result`
    = note: this error originates in the macro `float_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `(char, &str)` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:235:51
    |
235 |                 fn slice_shift_char(src: &str) -> Option<(char, &str)> {
    |                                                   ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_trait_impl!(Num for f32 f64);
    | ---------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `(char, &str)`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `float_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:218:14
    |
218 |         impl $name for $t {
    |              ^ doesn't have a size known at compile-time
...
377 | float_trait_impl!(Num for f32 f64);
    | ---------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Num`
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:67:35
    |
67  | pub trait Num: PartialEq + Zero + One + NumOps {
    |                                   ^^^ required by this bound in `Num`
    = note: this error originates in the macro `float_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/lib.rs:222:34
    |
222 |                               -> Result<Self, Self::FromStrRadixErr>
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
377 | float_trait_impl!(Num for f32 f64);
    | ---------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `Result`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:504:17
    |
504 | pub enum Result<T, E> {
    |                 ^ required by this bound in `Result`
    = note: this error originates in the macro `float_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u64>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `num-traits` due to 1306 previous errors
error[E0277]: the size for values of type `u64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u64`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<u128>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `u128` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `u128`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:33:38
    |
33  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `bool_to_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:83:38
    |
83  |             fn checked_cast(self) -> Option<$Dst> {
    |                                      ^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `common` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:173:14
    |
173 |         impl Cast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:175:30
    |
175 |             fn cast(self) -> Wrapping<$Dst> {
    |                              ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:180:14
    |
180 |         impl CheckedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Wrapping<usize>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Wrapping<usize>`
note: required by a bound in `Option`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
    |
518 | pub enum Option<T> {
    |                 ^ required by this bound in `Option`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:182:38
    |
182 |             fn checked_cast(self) -> Option<Wrapping<$Dst>> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:187:14
    |
187 |         impl UnwrappedCast<Wrapping<$Dst>> for $Src {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `usize` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:189:40
    |
189 |             fn unwrapped_cast(self) -> Wrapping<$Dst> {
    |                                        ^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
415 | unsigned! { u8, u16, u32, u64, u128, usize }
    | -------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `usize`
note: required by a bound in `Wrapping`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/num/wrapping.rs:42:21
    |
42  | pub struct Wrapping<T>(#[stable(feature = "rust1", since = "1.0.0")] pub T);
    |                     ^ required by this bound in `Wrapping`
    = note: this error originates in the macro `wrapping_int` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f32` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:429:14
    |
429 |         impl From<$Src> for Float<$Dst> {
    |              ^^^^^^^^^^ doesn't have a size known at compile-time
...
541 | from_for_float! { f32, u32, 24 => u32, u64, u128 }
    | -------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f32`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:429:14
    |
429 |         impl From<$Src> for Float<$Dst> {
    |              ^^^^^^^^^^ doesn't have a size known at compile-time
...
541 | from_for_float! { f32, u32, 24 => u32, u64, u128 }
    | -------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u32>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Round<f32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:480:14
    |
480 |         impl From<Round<$Src>> for Float<$Dst> {
    |              ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
541 | from_for_float! { f32, u32, 24 => u32, u64, u128 }
    | -------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Round<f32>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u32>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:480:14
    |
480 |         impl From<Round<$Src>> for Float<$Dst> {
    |              ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
541 | from_for_float! { f32, u32, 24 => u32, u64, u128 }
    | -------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u32>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:429:14
    |
429 |         impl From<$Src> for Float<$Dst> {
    |              ^^^^^^^^^^ doesn't have a size known at compile-time
...
541 | from_for_float! { f32, u32, 24 => u32, u64, u128 }
    | -------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u64>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:480:14
    |
480 |         impl From<Round<$Src>> for Float<$Dst> {
    |              ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
541 | from_for_float! { f32, u32, 24 => u32, u64, u128 }
    | -------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u64>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:429:14
    |
429 |         impl From<$Src> for Float<$Dst> {
    |              ^^^^^^^^^^ doesn't have a size known at compile-time
...
541 | from_for_float! { f32, u32, 24 => u32, u64, u128 }
    | -------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u128>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:480:14
    |
480 |         impl From<Round<$Src>> for Float<$Dst> {
    |              ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
541 | from_for_float! { f32, u32, 24 => u32, u64, u128 }
    | -------------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u128>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `f64` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:429:14
    |
429 |         impl From<$Src> for Float<$Dst> {
    |              ^^^^^^^^^^ doesn't have a size known at compile-time
...
542 | from_for_float! { f64, u64, 53 => u64, u128 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `f64`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:429:14
    |
429 |         impl From<$Src> for Float<$Dst> {
    |              ^^^^^^^^^^ doesn't have a size known at compile-time
...
542 | from_for_float! { f64, u64, 53 => u64, u128 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u64>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Round<f64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:480:14
    |
480 |         impl From<Round<$Src>> for Float<$Dst> {
    |              ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
542 | from_for_float! { f64, u64, 53 => u64, u128 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Round<f64>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:16
    |
369 | pub trait From<T>: Sized {
    |                ^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u64>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:480:14
    |
480 |         impl From<Round<$Src>> for Float<$Dst> {
    |              ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
542 | from_for_float! { f64, u64, 53 => u64, u128 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u64>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:429:14
    |
429 |         impl From<$Src> for Float<$Dst> {
    |              ^^^^^^^^^^ doesn't have a size known at compile-time
...
542 | from_for_float! { f64, u64, 53 => u64, u128 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u128>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Float<u128>` cannot be known at compilation time
   --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/int.rs:480:14
    |
480 |         impl From<Round<$Src>> for Float<$Dst> {
    |              ^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
...
542 | from_for_float! { f64, u64, 53 => u64, u128 }
    | --------------------------------------------- in this macro invocation
    |
    = help: the trait `Sized` is not implemented for `Float<u128>`
note: required by a bound in `From`
   --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/convert/mod.rs:369:20
    |
369 | pub trait From<T>: Sized {
    |                    ^^^^^ required by this bound in `From`
    = note: this error originates in the macro `from_for_float` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Round<T>` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:1134:10
     |
1134 | #[derive(Clone, Copy, Default, PartialEq, PartialOrd)]
     |          ^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `Round<T>`
note: required by a bound in `Clone`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/clone.rs:110:18
     |
110  | pub trait Clone: Sized {
     |                  ^^^^^ required by this bound in `Clone`
     = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Round<T>` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:1134:17
     |
1134 | #[derive(Clone, Copy, Default, PartialEq, PartialOrd)]
     |                 ^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `Round<T>`
note: required by a bound in `core::marker::Copy`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/marker.rs:383:17
     |
383  | pub trait Copy: Clone {
     |                 ^^^^^ required by this bound in `core::marker::Copy`
     = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `Round<T>` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:1134:23
     |
1134 | #[derive(Clone, Copy, Default, PartialEq, PartialOrd)]
     |                       ^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `Round<T>`
note: required by a bound in `Default`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/default.rs:102:20
     |
102  | pub trait Default: Sized {
     |                    ^^^^^ required by this bound in `Default`
     = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the size for values of type `core::cmp::Ordering` cannot be known at compilation time
    --> /home/hyperswine/.cargo/registry/src/github.com-1ecc6299db9ec823/az-1.2.0/src/lib.rs:1134:43
     |
1134 | #[derive(Clone, Copy, Default, PartialEq, PartialOrd)]
     |                                           ^^^^^^^^^^ doesn't have a size known at compile-time
     |
     = help: the trait `Sized` is not implemented for `core::cmp::Ordering`
note: required by a bound in `Option`
    --> /home/hyperswine/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/option.rs:518:17
     |
518  | pub enum Option<T> {
     |                 ^ required by this bound in `Option`
     = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)

error: could not compile `az` due to 764 previous errors
